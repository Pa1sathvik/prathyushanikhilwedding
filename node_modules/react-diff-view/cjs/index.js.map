{"version":3,"file":"index.js","sources":["../node_modules/classnames/index.js","../src/context/index.js","../src/utils/diff/util.js","../src/utils/diff/factory.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/eq.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObject.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/keys.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/toString.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/get.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/identity.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/findLastIndex.js","../src/utils/diff/insertHunk.js","../src/utils/diff/expandCollapsedBlockBy.js","../src/utils/diff/getChangeKey.js","../src/utils/diff/index.js","../node_modules/gitdiff-parser/index.js","../src/utils/parse.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/mapValues.js","../src/Hunk/CodeCell.js","../src/Hunk/utils.js","../src/Hunk/UnifiedHunk/UnifiedChange.js","../src/Hunk/UnifiedHunk/UnifiedWidget.js","../src/Hunk/UnifiedHunk/index.js","../src/Hunk/SplitHunk/SplitChange.js","../src/Hunk/SplitHunk/SplitWidget.js","../src/Hunk/SplitHunk/index.js","../src/Hunk/index.js","../src/Diff/index.js","../node_modules/warning/warning.js","../src/Decoration/SplitDecoration.js","../src/Decoration/UnifiedDecoration.js","../src/Decoration/index.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/_baseLodash.js","../node_modules/lodash/_LodashWrapper.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/flatten.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/constant.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/_shortOut.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/_metaMap.js","../node_modules/lodash/noop.js","../node_modules/lodash/_getData.js","../node_modules/lodash/_realNames.js","../node_modules/lodash/_getFuncName.js","../node_modules/lodash/_LazyWrapper.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_wrapperClone.js","../node_modules/lodash/wrapperLodash.js","../node_modules/lodash/_isLaziable.js","../node_modules/lodash/_createFlow.js","../node_modules/lodash/flow.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/last.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/map.js","../node_modules/lodash/flatMap.js","../src/tokenize/toTokenTrees.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_copyObject.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/keysIn.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/isSet.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_parent.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/omit.js","../src/tokenize/utils.js","../src/tokenize/normalizeToLines.js","../node_modules/lodash/isEqual.js","../src/tokenize/backToTree.js","../node_modules/lodash/groupBy.js","../node_modules/lodash/isEmpty.js","../src/tokenize/pickRanges.js","../node_modules/lodash/findIndex.js","../node_modules/diff-match-patch/index.js","../src/tokenize/markEdits.js","../src/tokenize/markWord.js","../src/hocs/wrapDisplayName.js","../src/hooks/useMinCollapsedLines.js","../src/hooks/helpers.js","../src/hooks/useChangeSelect.js","../src/hooks/useSourceExpansion.js","../node_modules/shallow-equal/src/objects.ts","../src/hooks/useTokenizeWorker.js","../node_modules/shallow-equal/src/arrays.ts","../src/hocs/withTokenizeWorker.js","../src/hocs/minCollapsedLines.js","../src/tokenize/index.js","../src/hocs/withChangeSelect.js","../src/hocs/withSourceExpansion.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import {createContext, useContext} from 'react';\n\nconst ContextType = createContext();\nconst {Provider} = ContextType;\nconst useDiffSettings = () => useContext(ContextType);\n\nexport {\n    Provider,\n    useDiffSettings,\n};\n","export const first = array => array[0];\n\nexport const last = array => array[array.length - 1];\n\nexport const sideToProperty = side => [side + 'Start', side + 'Lines'];\n","import {first, last, sideToProperty} from './util';\n\nexport const computeLineNumberFactory = side => {\n    if (side === 'old') {\n        return ({isNormal, isInsert, lineNumber, oldLineNumber}) => {\n            if (isInsert) {\n                return -1;\n            }\n\n            return isNormal ? oldLineNumber : lineNumber;\n        };\n    }\n    return ({isNormal, isDelete, lineNumber, newLineNumber}) => {\n        if (isDelete) {\n            return -1;\n        }\n\n        return isNormal ? newLineNumber : lineNumber;\n    };\n};\n\nexport const isInHunkFactory = (startProperty, linesProperty) => (hunk, lineNumber) => {\n    const start = hunk[startProperty];\n    const end = start + hunk[linesProperty];\n\n    return lineNumber >= start && lineNumber < end;\n};\n\nexport const isBetweenHunksFactory = (startProperty, linesProperty) => (previousHunk, nextHunk, lineNumber) => {\n    const start = previousHunk[startProperty] + previousHunk[linesProperty];\n    const end = nextHunk[startProperty];\n\n    return lineNumber >= start && lineNumber < end;\n};\n\nconst findContainerHunkFactory = side => {\n    const [startProperty, linesProperty] = sideToProperty(side);\n    const isInHunk = isInHunkFactory(startProperty, linesProperty);\n\n    return (hunks, lineNumber) => hunks.find(hunk => isInHunk(hunk, lineNumber));\n};\n\n/* eslint-disable consistent-return */\nexport const findChangeByLineNumberFactory = side => {\n    const computeLineNumber = computeLineNumberFactory(side);\n    const findContainerHunk = findContainerHunkFactory(side);\n\n    return (hunks, lineNumber) => {\n        const containerHunk = findContainerHunk(hunks, lineNumber);\n\n        if (!containerHunk) {\n            return undefined;\n        }\n\n        return containerHunk.changes.find(change => computeLineNumber(change) === lineNumber);\n    };\n};\n/* eslint-enable consistent-return */\n\nexport const getCorrespondingLineNumberFactory = baseSide => {\n    const anotherSide = baseSide === 'old' ? 'new' : 'old';\n    const [baseStart, baseLines] = sideToProperty(baseSide);\n    const [correspondingStart, correspondingLines] = sideToProperty(anotherSide);\n    const baseLineNumber = computeLineNumberFactory(baseSide);\n    const correspondingLineNumber = computeLineNumberFactory(anotherSide);\n    const isInHunk = isInHunkFactory(baseStart, baseLines);\n    const isBetweenHunks = isBetweenHunksFactory(baseStart, baseLines);\n\n    /* eslint-disable complexity */\n    return (hunks, lineNumber) => {\n        const firstHunk = first(hunks);\n\n        // Before first hunk\n        if (lineNumber < firstHunk[baseStart]) {\n            const spanFromStart = firstHunk[baseStart] - lineNumber;\n            return firstHunk[correspondingStart] - spanFromStart;\n        }\n\n        // After last hunk, this can be done in `for` loop, just a quick return path\n        const lastHunk = last(hunks);\n        if (lastHunk[baseStart] + lastHunk[baseLines] <= lineNumber) {\n            const spanFromEnd = lineNumber - lastHunk[baseStart] - lastHunk[baseLines];\n            return lastHunk[correspondingStart] + lastHunk[correspondingLines] + spanFromEnd;\n        }\n\n        for (let i = 0; i < hunks.length; i++) {\n            const currentHunk = hunks[i];\n            const nextHunk = hunks[i + 1];\n\n            // Within current hunk\n            if (isInHunk(currentHunk, lineNumber)) {\n                const changeIndex = currentHunk.changes.findIndex(change => baseLineNumber(change) === lineNumber);\n                const change = currentHunk.changes[changeIndex];\n\n                if (change.isNormal) {\n                    return correspondingLineNumber(change);\n                }\n\n                // For changes of type \"insert\" and \"delete\", the sibling change can be the corresponding one,\n                // or they can have no corresponding change\n                //\n                // Git diff always put delete change before insert change\n                //\n                // Note that `nearbySequences: \"zip\"` option can affect this function\n                const possibleCorrespondingChangeIndex = change.isDelete ? changeIndex + 1 : changeIndex - 1;\n                const possibleCorrespondingChange = currentHunk.changes[possibleCorrespondingChangeIndex];\n\n                if (!possibleCorrespondingChange) {\n                    return -1;\n                }\n\n                const negativeChangeType = change.isInsert ? 'delete' : 'insert';\n\n                return possibleCorrespondingChange.type === negativeChangeType\n                    ? correspondingLineNumber(possibleCorrespondingChange)\n                    : -1;\n            }\n\n            // Between 2 hunks\n            if (isBetweenHunks(currentHunk, nextHunk, lineNumber)) {\n                const spanFromEnd = lineNumber - currentHunk[baseStart] - currentHunk[baseLines];\n                return currentHunk[correspondingStart] + currentHunk[correspondingLines] + spanFromEnd;\n            }\n        }\n\n        /* istanbul ignore next Should not arrive here */\n        throw new Error(`Unexpected line position ${lineNumber}`);\n    };\n    /* eslint-enable complexity */\n};\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n","import {findLastIndex} from 'lodash';\nimport {computeLineNumberFactory} from './factory';\nimport {last} from './util';\n\nconst computeOldLineNumber = computeLineNumberFactory('old');\n\nconst computeNewLineNumber = computeLineNumberFactory('new');\n\nconst getOldRangeFromHunk = ({oldStart, oldLines}) => [oldStart, oldStart + oldLines - 1];\n\nconst createHunkFromChanges = changes => {\n    if (!changes.length) {\n        return null;\n    }\n\n    const initial = {\n        isPlain: true,\n        content: '',\n        oldStart: -1,\n        oldLines: 0,\n        newStart: -1,\n        newLines: 0,\n    };\n    /* eslint-disable no-param-reassign */\n    const hunk = changes.reduce(\n        (hunk, change) => {\n            if (!change.isNormal) {\n                hunk.isPlain = false;\n            }\n\n            if (!change.isInsert) {\n                hunk.oldLines = hunk.oldLines + 1;\n\n                if (hunk.oldStart === -1) {\n                    hunk.oldStart = computeOldLineNumber(change);\n                }\n            }\n\n            if (!change.isDelete) {\n                hunk.newLines = hunk.newLines + 1;\n\n                if (hunk.newStart === -1) {\n                    hunk.newStart = computeNewLineNumber(change);\n                }\n            }\n\n            return hunk;\n        },\n        initial\n    );\n    /* eslint-enable no-param-reassign */\n    const {oldStart, oldLines, newStart, newLines} = hunk;\n\n    return {\n        ...hunk,\n        content: `@@ -${oldStart},${oldLines} +${newStart},${newLines}`,\n        changes: changes,\n    };\n};\n\nexport const textLinesToHunk = (lines, oldStartLineNumber, newStartLineNumber) => {\n    const lineToChange = (line, i) => {\n        return {\n            type: 'normal',\n            isNormal: true,\n            oldLineNumber: oldStartLineNumber + i,\n            newLineNumber: newStartLineNumber + i,\n            content: '' + line,\n        };\n    };\n    const changes = lines.map(lineToChange);\n\n    return createHunkFromChanges(changes);\n};\n\nconst sliceHunk = ({changes}, startOldLineNumber, endOldLineNumber) => {\n    const changeIndex = changes.findIndex(change => computeOldLineNumber(change) >= startOldLineNumber);\n\n    if (changeIndex === -1) {\n        return null;\n    }\n\n    // It is possible to have some insert changes before `startOldLineNumber`,\n    // since we slice from old line number, these changes can be ommited, so we need to grab them back\n    const startIndex = (() => {\n        if (changeIndex === 0) {\n            return changeIndex;\n        }\n\n        const nearestHeadingNocmalChangeIndex = findLastIndex(changes, change => !change.isInsert, changeIndex - 1);\n        return nearestHeadingNocmalChangeIndex === -1 ? changeIndex : nearestHeadingNocmalChangeIndex + 1;\n    })();\n\n    if (endOldLineNumber === undefined) {\n        const slicedChanges = changes.slice(startIndex);\n\n        return createHunkFromChanges(slicedChanges);\n    }\n\n    const endIndex = findLastIndex(changes, change => computeOldLineNumber(change) <= endOldLineNumber);\n    const slicedChanges = changes.slice(startIndex, endIndex === -1 ? undefined : endIndex);\n\n    return createHunkFromChanges(slicedChanges);\n};\n\nconst mergeHunk = (previousHunk, nextHunk) => {\n    if (!previousHunk) {\n        return nextHunk;\n    }\n\n    if (!nextHunk) {\n        return previousHunk;\n    }\n\n    const [previousStart, previousEnd] = getOldRangeFromHunk(previousHunk);\n    const [nextStart, nextEnd] = getOldRangeFromHunk(nextHunk);\n\n    // They are just neighboring, simply concat changes and adjust lines count\n    if (previousEnd + 1 === nextStart) {\n        return createHunkFromChanges([...previousHunk.changes, ...nextHunk.changes]);\n    }\n\n    // It is possible that `previousHunk` entirely **contains** `nextHunk`,\n    // and if we are merging a fake hunk with a valid hunk, we need to replace `nextHunk`'s corresponding range\n    if (previousStart <= nextStart && previousEnd >= nextEnd) {\n        if (previousHunk.isPlain && !nextHunk.isPlain) {\n            const head = sliceHunk(previousHunk, previousStart, nextStart);\n            const tail = sliceHunk(previousHunk, nextEnd + 1);\n            return mergeHunk(mergeHunk(head, nextHunk), tail);\n        }\n\n        return previousHunk;\n    }\n\n    // The 2 hunks have some overlapping, we need to slice the fake one in order to preserve non-normal changes\n    if (previousHunk.isPlain) {\n        const head = sliceHunk(previousHunk, previousStart, nextStart);\n        return mergeHunk(head, nextHunk);\n    }\n\n    const tail = sliceHunk(nextHunk, previousEnd + 1);\n    return mergeHunk(previousHunk, tail);\n};\n\nconst appendOrMergeHunk = (hunks, nextHunk) => {\n    const lastHunk = last(hunks);\n\n    if (!lastHunk) {\n        return [nextHunk];\n    }\n\n    const expectedNextStart = lastHunk.oldStart + lastHunk.oldLines;\n    const actualNextStart = nextHunk.oldStart;\n\n    if (expectedNextStart < actualNextStart) {\n        return hunks.concat(nextHunk);\n    }\n\n    const mergedHunk = mergeHunk(lastHunk, nextHunk);\n\n    return [...hunks.slice(0, -1), mergedHunk];\n};\n\nexport const insertHunk = (hunks, insertion) => {\n    const insertionOldLineNumber = computeOldLineNumber(insertion.changes[0]);\n    const isLaterThanInsertion = ({changes}) => {\n        if (!changes.length) {\n            return false;\n        }\n\n        return computeOldLineNumber(changes[0]) >= insertionOldLineNumber;\n    };\n    const insertPosition = hunks.findIndex(isLaterThanInsertion);\n    const hunksWithInsertion = insertPosition === -1\n        ? hunks.concat(insertion)\n        : [\n            ...hunks.slice(0, insertPosition),\n            insertion,\n            ...hunks.slice(insertPosition),\n        ];\n\n    return hunksWithInsertion.reduce(appendOrMergeHunk, []);\n};\n","import {insertHunk, textLinesToHunk} from './insertHunk';\nimport {\n    computeLineNumberFactory, isInHunkFactory, isBetweenHunksFactory, getCorrespondingLineNumberFactory,\n} from './factory';\nimport {first} from './util';\n\nconst getCorrespondingNewLineNumber = getCorrespondingLineNumberFactory('old');\n\nconst computeOldLineNumber = computeLineNumberFactory('old');\n\nconst isOldLineNumberInHunk = isInHunkFactory('oldStart', 'oldLines');\n\nconst isOldLineNumberBetweenHunks = isBetweenHunksFactory('oldStart', 'oldLines');\n\nconst findCorrespondingValidHunkIndex = (hunks, oldLineNumber) => {\n    if (!hunks.length) {\n        return -1;\n    }\n\n    const firstHunk = first(hunks);\n    if (oldLineNumber < firstHunk.oldStart || isOldLineNumberInHunk(firstHunk, oldLineNumber)) {\n        return 0;\n    }\n\n    for (let i = 1; i < hunks.length; i++) {\n        const currentHunk = hunks[i];\n\n        if (isOldLineNumberInHunk(currentHunk, oldLineNumber)) {\n            return i;\n        }\n\n        const previousHunk = hunks[i - 1];\n\n        if (isOldLineNumberBetweenHunks(previousHunk, currentHunk, oldLineNumber)) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nconst findNearestNormalChangeIndex = ({changes}, start) => {\n    const index = changes.findIndex(change => computeOldLineNumber(change) === start);\n\n    if (index < 0) {\n        return -1;\n    }\n\n    for (let i = index; i < changes.length; i++) {\n        const change = changes[i];\n\n        if (change.isNormal) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nconst splitRangeToValidOnes = (hunks, start, end) => {\n    const correspondingHunkIndex = findCorrespondingValidHunkIndex(hunks, start);\n\n    // `start` is after all hunks, we believe all left lines are normal.\n    if (correspondingHunkIndex === -1) {\n        return [[start, end]];\n    }\n\n    const correspondingHunk = hunks[correspondingHunkIndex];\n\n    // If `start` points to a line before this hunk, we collect all heading normal changes\n    if (start < correspondingHunk.oldStart) {\n        const headingChangesCount = correspondingHunk.changes.findIndex(change => !change.isNormal);\n        const validEnd = correspondingHunk.oldStart + Math.max(headingChangesCount, 0);\n\n        if (validEnd >= end) {\n            return [[start, end]];\n        }\n\n        return [\n            [start, validEnd],\n            ...splitRangeToValidOnes(hunks, validEnd + 1, end),\n        ];\n    }\n\n    // Now the `correspondingHunk` must be a hunk containing `start`,\n    // however it is still possible that `start` is not a normal change\n    const {changes} = correspondingHunk;\n    const nearestNormalChangeIndex = findNearestNormalChangeIndex(correspondingHunk, start);\n\n    // If there is no normal changes after `start`, splitting ends up here\n    if (nearestNormalChangeIndex === -1) {\n        return [];\n    }\n\n    const validStartChange = changes[nearestNormalChangeIndex];\n    const validStart = computeOldLineNumber(validStartChange);\n    // Iterate to `end`, if `end` falls out of hunk, we can split it to 2 ranges\n    const adjacentChangesCount = changes.slice(nearestNormalChangeIndex + 1).findIndex(change => !change.isNormal);\n    const validEnd = computeOldLineNumber(validStartChange) + Math.max(adjacentChangesCount, 0);\n\n    if (validEnd >= end) {\n        return [[validStart, end]];\n    }\n\n    return [\n        [validStart, validEnd],\n        ...splitRangeToValidOnes(hunks, validEnd + 1, end),\n    ];\n};\n\nconst expandCodeByValidRange = (hunks, rawCodeOrLines, [start, end]) => {\n    // Note `end` is not inclusive, this is the same as `Array.prototype.slice` method\n    const linesOfCode = typeof rawCodeOrLines === 'string' ? rawCodeOrLines.split('\\n') : rawCodeOrLines;\n    const slicedLines = linesOfCode.slice(Math.max(start, 1) - 1, end - 1);\n\n    if (!slicedLines.length) {\n        return hunks;\n    }\n\n    const slicedHunk = textLinesToHunk(slicedLines, start, getCorrespondingNewLineNumber(hunks, start));\n    return insertHunk(hunks, slicedHunk);\n};\n\nexport const expandFromRawCode = (hunks, rawCodeOrLines, start, end) => {\n    // It is possible to have some insert or delete changes between `start` and `end`,\n    // in order to be 100% safe, we need to split the range to one or more ranges which contains only normal changes.\n    //\n    // For each `start` line number, we can either:\n    //\n    // 1. Find a change and adjust to a nearest normal one.\n    // 2. Find no corresponding change so it must be a collapsed normal change.\n    //\n    // For both cases we can have a starting normal change, then we iterate over its subsequent changes\n    // (line numbers with no corresponding change is considered a normal one)\n    // until an insert or delete is encountered, this is a **valid range**.\n    //\n    // After one valid range is resolved, discard all line numbers related to delete changes, the next normal change\n    // is the start of next valid range.\n    const validRanges = splitRangeToValidOnes(hunks, start, end);\n\n    return validRanges.reduce((hunks, range) => expandCodeByValidRange(hunks, rawCodeOrLines, range), hunks);\n};\n\nexport const getCollapsedLinesCountBetween = (previousHunk, nextHunk) => {\n    if (!previousHunk) {\n        return nextHunk.oldStart - 1;\n    }\n\n    if (!nextHunk) {\n        throw new Error('Unable to compute lines count after the last hunk');\n    }\n\n    const previousEnd = previousHunk.oldStart + previousHunk.oldLines;\n    const nextStart = nextHunk.oldStart;\n\n    return nextStart - previousEnd;\n};\n\nexport const expandCollapsedBlockBy = (hunks, rawCodeOrLines, predicate) => {\n    const linesOfCode = typeof rawCodeOrLines === 'string' ? rawCodeOrLines.split('\\n') : rawCodeOrLines;\n    const firstHunk = first(hunks);\n    const initialExpandingBlocks = predicate(firstHunk.oldStart - 1, 1, 1) ? [[1, firstHunk.oldStart]] : [];\n\n    const expandingBlocks = hunks.reduce(\n        (expandingBlocks, currentHunk, index, hunks) => {\n            const nextHunk = hunks[index + 1];\n            const oldStart = currentHunk.oldStart + currentHunk.oldLines;\n            const newStart = currentHunk.newStart + currentHunk.newLines;\n            const lines = nextHunk\n                ? getCollapsedLinesCountBetween(currentHunk, nextHunk)\n                : linesOfCode.length - oldStart + 1;\n            const shouldExpand = predicate(lines, oldStart, newStart);\n\n            if (shouldExpand) {\n                // initialExpandingBlocks is scoped, it is redundant to copy the array\n                expandingBlocks.push([oldStart, oldStart + lines]);\n            }\n            return expandingBlocks;\n        },\n        initialExpandingBlocks\n    );\n\n    return expandingBlocks.reduce((hunks, [start, end]) => expandFromRawCode(hunks, linesOfCode, start, end), hunks);\n};\n","export const getChangeKey = change => {\n    if (!change) {\n        throw new Error('change is not provided');\n    }\n\n    const {isNormal, isInsert, lineNumber, oldLineNumber} = change;\n\n    if (isNormal) {\n        return 'N' + oldLineNumber;\n    }\n\n    const prefix = isInsert ? 'I' : 'D';\n    return prefix + lineNumber;\n};\n","import {computeLineNumberFactory, findChangeByLineNumberFactory, getCorrespondingLineNumberFactory} from './factory';\n\nexport * from './insertHunk';\nexport * from './expandCollapsedBlockBy';\nexport * from './getChangeKey';\n\nexport const computeOldLineNumber = computeLineNumberFactory('old');\n\nexport const computeNewLineNumber = computeLineNumberFactory('new');\n\nexport const findChangeByOldLineNumber = findChangeByLineNumberFactory('old');\n\nexport const findChangeByNewLineNumber = findChangeByLineNumberFactory('new');\n\nexport const getCorrespondingOldLineNumber = getCorrespondingLineNumberFactory('new');\n\nexport const getCorrespondingNewLineNumber = getCorrespondingLineNumberFactory('old');\n","/**\n * @file gitdiff 消息解析器\n * @author errorrik(errorrik@gmail.com)\n */\n\n(function (root) {\n    var STAT_START = 2;\n    var STAT_FILE_META = 3;\n    var STAT_HUNK = 5;\n\n\n    var parser = {\n        /**\n         * 解析 gitdiff 消息\n         *\n         * @param {string} source gitdiff消息内容\n         * @return {Object}\n         */\n        parse: function (source) {\n            var infos = [];\n            var stat = STAT_START;\n            var currentInfo;\n            var currentHunk;\n            var changeOldLine;\n            var changeNewLine;\n\n\n            var lines = source.split('\\n');\n            var linesLen = lines.length;\n            var i = 0;\n\n            while (i < linesLen) {\n                var line = lines[i];\n\n                if (line.indexOf('diff --git') === 0) {\n                    // read file\n                    currentInfo = {\n                        hunks: [],\n                        oldEndingNewLine: true,\n                        newEndingNewLine: true\n                    };\n\n                    infos.push(currentInfo);\n\n\n                    // 1. 如果oldPath是/dev/null就是add\n                    // 2. 如果newPath是/dev/null就是delete\n                    // 3. 如果有 rename from foo.js 这样的就是rename\n                    // 4. 如果有 copy from foo.js 这样的就是copy\n                    // 5. 其它情况是modify\n                    var currentInfoType = null;\n\n\n                    // read type and index\n                    var simiLine;\n                    simiLoop: while ((simiLine = lines[++i])) {\n                        var spaceIndex = simiLine.indexOf(' ');\n                        var infoType = spaceIndex > -1 ? simiLine.slice(0, spaceIndex) : infoType;\n\n                        switch (infoType) {\n                            case 'diff': // diff --git\n                                i--;\n                                break simiLoop;\n\n                            case 'deleted':\n                            case 'new':\n                                var leftStr = simiLine.slice(spaceIndex + 1);\n                                if (leftStr.indexOf('file mode') === 0) {\n                                    currentInfo[infoType === 'new' ? 'newMode' : 'oldMode'] = leftStr.slice(10);\n                                }\n                                break;\n\n                            case 'similarity':\n                                currentInfo.similarity = parseInt(simiLine.split(' ')[2], 10);\n                                break;\n\n                            case 'index':\n                                var segs = simiLine.slice(spaceIndex + 1).split(' ');\n                                var revs = segs[0].split('..');\n                                currentInfo.oldRevision = revs[0];\n                                currentInfo.newRevision = revs[1];\n\n                                if (segs[1]) {\n                                    currentInfo.oldMode = currentInfo.newMode = segs[1];\n                                }\n                                break;\n                            \n\n                            case 'copy':\n                            case 'rename':\n                                var infoStr = simiLine.slice(spaceIndex + 1);\n                                if (infoStr.indexOf('from') === 0) {\n                                    currentInfo.oldPath = infoStr.slice(5);\n                                }\n                                else { // rename to\n                                    currentInfo.newPath = infoStr.slice(3);\n                                }\n                                currentInfoType = infoType;\n                                break;\n\n                            case '---':\n                                var oldPath = simiLine.slice(spaceIndex + 1);\n                                var newPath = lines[++i].slice(4); // next line must be \"+++ xxx\"\n                                if (oldPath === '/dev/null') {\n                                    newPath = newPath.slice(2);\n                                    currentInfoType = 'add';\n                                }\n                                else if (newPath === '/dev/null') {\n                                    oldPath = oldPath.slice(2);\n                                    currentInfoType = 'delete';\n                                } else {\n                                    currentInfoType = 'modify';\n                                    oldPath = oldPath.slice(2);\n                                    newPath = newPath.slice(2);\n                                }\n\n                                currentInfo.oldPath = oldPath;\n                                currentInfo.newPath = newPath;\n                                stat = STAT_HUNK;\n                                break simiLoop;\n                        }\n                    }\n\n                    currentInfo.type = currentInfoType || 'modify';\n                }\n                else if (line.indexOf('Binary') === 0) {\n                    currentInfo.isBinary = true;\n                    currentInfo.type = line.indexOf('/dev/null and') >= 0\n                        ? 'add'\n                        : (line.indexOf('and /dev/null') >= 0 ? 'delete' : 'modify');\n                    stat = STAT_START;\n                    currentInfo = null;\n                }\n                else if (stat === STAT_HUNK) {\n                    if (line.indexOf('@@') === 0) {\n                        var match = /^@@\\s+-([0-9]+)(,([0-9]+))?\\s+\\+([0-9]+)(,([0-9]+))?/.exec(line)\n                        currentHunk = {\n                            content: line,\n                            oldStart: match[1] - 0,\n                            newStart: match[4] - 0,\n                            oldLines: match[3] - 0 || 1,\n                            newLines: match[6] - 0 || 1,\n                            changes: []\n                        };\n\n                        currentInfo.hunks.push(currentHunk);\n                        changeOldLine = currentHunk.oldStart;\n                        changeNewLine = currentHunk.newStart;\n                    }\n                    else {\n                        var typeChar = line.slice(0, 1);\n                        var change = {\n                            content: line.slice(1)\n                        };\n\n                        switch (typeChar) {\n                            case '+':\n                                change.type = 'insert';\n                                change.isInsert = true;\n                                change.lineNumber = changeNewLine;\n                                changeNewLine++;\n                                break;\n\n                            case '-':\n                                change.type = 'delete';\n                                change.isDelete = true;\n                                change.lineNumber = changeOldLine;\n                                changeOldLine++;\n                                break;\n\n                            case ' ':\n                                change.type = 'normal';\n                                change.isNormal = true;\n                                change.oldLineNumber = changeOldLine;\n                                change.newLineNumber = changeNewLine;\n                                changeOldLine++;\n                                changeNewLine++;\n                                break;\n\n                            case '\\\\': // Seems \"no newline\" is the only case starting with /\n                                var lastChange = currentHunk.changes[currentHunk.changes.length - 1];\n                                if (!lastChange.isDelete) {\n                                    currentInfo.newEndingNewLine = false;\n                                }\n                                if (!lastChange.isInsert) {\n                                    currentInfo.oldEndingNewLine = false;\n                                }\n                        }\n\n                        change.type && currentHunk.changes.push(change);\n                    }\n                }\n\n                i++;\n            }\n\n            return infos;\n        }\n    };\n\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = parser;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('gitDiffParser', [], parser);\n    }\n    else {\n        root.gitDiffParser = parser;\n    }\n})(this);\n","import parser from 'gitdiff-parser';\n\nconst zipChanges = changes => {\n    const [result] = changes.reduce(\n        ([result, last, lastDeletionIndex], current, i) => {\n            if (!last) {\n                result.push(current);\n                return [result, current, current.isDelete ? i : -1];\n            }\n\n            if (current.isInsert && lastDeletionIndex >= 0) {\n                result.splice(lastDeletionIndex + 1, 0, current);\n                // The new `lastDeletionIndex` may be out of range, but `splice` will fix it\n                return [result, current, lastDeletionIndex + 2];\n            }\n\n            result.push(current);\n\n            // Keep the `lastDeletionIndex` if there are lines of deletions,\n            // otherwise update it to the new deletion line\n            const newLastDeletionIndex = current.isDelete ? (last.isDelete ? lastDeletionIndex : i) : i;\n\n            return [result, current, newLastDeletionIndex];\n        },\n        [[], null, -1]\n    );\n    return result;\n};\n\nconst mapHunk = (hunk, options) => {\n    const changes = options.nearbySequences === 'zip' ? zipChanges(hunk.changes) : hunk.changes;\n\n    return {\n        ...hunk,\n        isPlain: false,\n        changes: changes,\n    };\n};\n\nconst mapFile = (file, options) => {\n    const hunks = file.hunks.map(hunk => mapHunk(hunk, options));\n\n    return {...file, hunks};\n};\n\nconst normalizeDiffText = text => {\n    // Git diff header:\n    //\n    // diff --git a/test/fixture/test/ci.go b/test/fixture/test/ci.go\n    // index 6829b8a2..4c565f1b 100644\n    // --- a/test/fixture/test/ci.go\n    // +++ b/test/fixture/test/ci.go\n    if (text.indexOf('diff --git') === 0) {\n        return text;\n    }\n\n    // Unidiff header:\n    //\n    // --- /test/fixture/test/ci.go 2002-02-21 23:30:39.942229878 -0800\n    // +++ /test/fixture/test/ci.go 2002-02-21 23:30:50.442260588 -0800\n    const indexOfFirstLineBreak = text.indexOf('\\n');\n    const indexOfSecondLineBreak = text.indexOf('\\n', indexOfFirstLineBreak + 1);\n    const firstLine = text.slice(0, indexOfFirstLineBreak);\n    const secondLine = text.slice(indexOfFirstLineBreak + 1, indexOfSecondLineBreak);\n    const oldPath = firstLine.split(' ').slice(1, -3).join(' ');\n    const newPath = secondLine.split(' ').slice(1, -3).join(' ');\n    const segments = [\n        `diff --git a/${oldPath} b/${newPath}`,\n        'index 1111111..2222222 100644',\n        `--- a/${oldPath}`,\n        `+++ b/${newPath}`,\n        text.slice(indexOfSecondLineBreak + 1),\n    ];\n\n    return segments.join('\\n');\n};\n\nexport const parseDiff = (text, options = {}) => {\n    const diffText = normalizeDiffText(text.trim());\n    const files = parser.parse(diffText);\n\n    return files.map(file => mapFile(file, options));\n};\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import {memo} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst defaultRenderToken = ({type, value, markType, properties, className, children}, i) => {\n    const renderWithClassName = className => (\n        <span key={i} className={className}>\n            {value ? value : (children && children.map(defaultRenderToken))}\n        </span>\n    );\n\n\n    switch (type) {\n        case 'text':\n            return value;\n        case 'mark':\n            return renderWithClassName(`diff-code-mark diff-code-mark-${markType}`);\n        case 'edit':\n            return renderWithClassName('diff-code-edit');\n        default: {\n            // properties normally not exist since it is deconstructed in pickRange, remove in next major release\n            const legacyClassName = properties && properties.className;\n            return renderWithClassName(classNames(className || legacyClassName));\n        }\n    }\n};\n\nconst CodeCell = props => {\n    const {text, tokens, renderToken, ...attributes} = props;\n    const actualRenderToken = renderToken\n        ? (token, i) => renderToken(token, defaultRenderToken, i)\n        : defaultRenderToken;\n\n    return (\n        <td {...attributes}>\n            {\n                tokens\n                    ? (tokens.length ? tokens.map(actualRenderToken) : ' ')\n                    : (text || ' ')\n            }\n        </td>\n    );\n};\n\nCodeCell.propTypes = {\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n    tokens: PropTypes.arrayOf(PropTypes.object),\n};\n\nCodeCell.defaultProps = {\n    tokens: null,\n};\n\nexport default memo(CodeCell);\n","import {computeOldLineNumber, computeNewLineNumber} from '../utils';\n\nexport const renderDefaultBy = (change, side) => () => {\n    const lineNumber = side === 'old' ? computeOldLineNumber(change) : computeNewLineNumber(change);\n    return lineNumber === -1 ? undefined : lineNumber;\n};\n\nexport const wrapInAnchorBy = (gutterAnchor, anchorTarget) => element => {\n    if (!gutterAnchor || !element) {\n        return element;\n    }\n\n    return <a href={'#' + anchorTarget}>{element}</a>;\n};\n\nexport const composeCallback = (own, custom) => {\n    if (custom) {\n        return e => {\n            own(e);\n            custom(); // `custom` is already bound with `arg`\n        };\n    }\n\n    return own;\n};\n","import {memo, useState, useMemo, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {mapValues} from 'lodash';\nimport CodeCell from '../CodeCell';\nimport {composeCallback, renderDefaultBy, wrapInAnchorBy} from '../utils';\n\nconst useBoundCallbacks = (callbacks, arg, hoverOn, hoverOff) => useMemo(\n    () => {\n        const output = mapValues(callbacks, fn => e => fn(arg, e));\n        output.onMouseEnter = composeCallback(hoverOn, output.onMouseEnter);\n        output.onMouseLeave = composeCallback(hoverOff, output.onMouseLeave);\n        return output;\n    },\n    [callbacks, hoverOn, hoverOff, arg]\n);\n\nconst useBoolean = () => {\n    const [value, setValue] = useState(false);\n    const on = useCallback(() => setValue(true), []);\n    const off = useCallback(() => setValue(false), []);\n    return [value, on, off];\n};\n\nconst renderGutterCell = (className, change, side, gutterAnchor, anchorTarget, events, inHoverState, renderGutter) => {\n    const gutterOptions = {\n        change,\n        side,\n        inHoverState,\n        renderDefault: renderDefaultBy(change, side),\n        wrapInAnchor: wrapInAnchorBy(gutterAnchor, anchorTarget),\n    };\n\n    return (\n        <td className={className} {...events}>\n            {renderGutter(gutterOptions)}\n        </td>\n    );\n};\n\nconst UnifiedChange = props => {\n    const {\n        change,\n        selected,\n        tokens,\n        className,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        hideGutter,\n        gutterAnchor,\n        generateAnchorID,\n        renderToken,\n        renderGutter,\n    } = props;\n    const {type, content} = change;\n\n    const [hover, hoverOn, hoverOff] = useBoolean();\n    const eventArg = useMemo(() => ({change}), [change]);\n    const boundGutterEvents = useBoundCallbacks(gutterEvents, eventArg, hoverOn, hoverOff);\n    const boundCodeEvents = useBoundCallbacks(codeEvents, eventArg, hoverOn, hoverOff);\n\n    const anchorID = generateAnchorID(change);\n    const gutterClassNameValue = classNames(\n        'diff-gutter',\n        `diff-gutter-${type}`,\n        gutterClassName,\n        {'diff-gutter-selected': selected}\n    );\n    const codeClassNameValue = classNames(\n        'diff-code',\n        `diff-code-${type}`,\n        codeClassName,\n        {'diff-code-selected': selected}\n    );\n\n    return (\n        <tr id={anchorID} className={classNames('diff-line', className)}>\n            {\n                !hideGutter && renderGutterCell(\n                    gutterClassNameValue,\n                    change,\n                    'old',\n                    gutterAnchor,\n                    anchorID,\n                    boundGutterEvents,\n                    hover,\n                    renderGutter\n                )\n            }\n            {\n                !hideGutter && renderGutterCell(\n                    gutterClassNameValue,\n                    change,\n                    'new',\n                    gutterAnchor,\n                    anchorID,\n                    boundGutterEvents,\n                    hover,\n                    renderGutter\n                )\n            }\n            <CodeCell\n                className={codeClassNameValue}\n                text={content}\n                tokens={tokens}\n                renderToken={renderToken}\n                {...boundCodeEvents}\n            />\n        </tr>\n    );\n};\n\n\nUnifiedChange.propTypes = {\n    selected: PropTypes.bool.isRequired,\n    tokens: PropTypes.arrayOf(PropTypes.object),\n};\n\nUnifiedChange.defaultProps = {\n    tokens: null,\n};\n\nexport default memo(UnifiedChange);\n","const UnifiedWidget = ({hideGutter, element}) => (\n    <tr className=\"diff-widget\">\n        <td colSpan={hideGutter ? 1 : 3} className=\"diff-widget-content\">\n            {element}\n        </td>\n    </tr>\n);\n\nexport default UnifiedWidget;\n","import classNames from 'classnames';\nimport {getChangeKey, computeOldLineNumber, computeNewLineNumber} from '../../utils';\nimport UnifiedChange from './UnifiedChange';\nimport UnifiedWidget from './UnifiedWidget';\n\nconst groupElements = (changes, widgets) => changes.reduce(\n    (elements, change) => {\n        const key = getChangeKey(change);\n\n        elements.push(['change', key, change]);\n\n        const widget = widgets[key];\n\n        if (widget) {\n            elements.push(['widget', key, widget]);\n        }\n\n        return elements;\n    },\n    []\n);\n\nconst renderRow = ([type, key, value], props) => {\n    const {hideGutter, selectedChanges, tokens, lineClassName, ...changeProps} = props;\n\n    if (type === 'change') {\n        const side = value.isDelete ? 'old' : 'new';\n        const lineNumber = value.isDelete ? computeOldLineNumber(value) : computeNewLineNumber(value);\n        const tokensOfLine = tokens ? tokens[side][lineNumber - 1] : null;\n\n        return (\n            <UnifiedChange\n                key={`change${key}`}\n                className={lineClassName}\n                change={value}\n                hideGutter={hideGutter}\n                selected={selectedChanges.includes(key)}\n                tokens={tokensOfLine}\n                {...changeProps}\n            />\n        );\n    }\n    else if (type === 'widget') {\n        return <UnifiedWidget key={`widget${key}`} hideGutter={hideGutter} element={value} />;\n    }\n\n    return null;\n};\n\nconst UnifiedHunk = props => {\n    const {\n        hunk,\n        widgets,\n        className,\n        ...childrenProps\n    } = props;\n    const elements = groupElements(hunk.changes, widgets);\n\n    return (\n        <tbody className={classNames('diff-hunk', className)}>\n            {elements.map(element => renderRow(element, childrenProps))}\n        </tbody>\n    );\n};\n\nexport default UnifiedHunk;\n","import {memo, useState, useMemo, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {mapValues} from 'lodash';\nimport CodeCell from '../CodeCell';\nimport {composeCallback, renderDefaultBy, wrapInAnchorBy} from '../utils';\n\nconst SIDE_OLD = 0;\nconst SIDE_NEW = 1;\n\nconst useCallbackOnSide = (side, setHover, change, customCallbacks) => {\n    const markHover = useCallback(() => setHover(side), [side, setHover]);\n    const unmarkHover = useCallback(() => setHover(''), [setHover]);\n    // Unlike selectors, hooks do not provide native functionality to customize comparator,\n    // on realizing that this does not reduce amount of renders, only preventing duplicate merge computations,\n    // we decide not to optimize this extremely, leave it recomputed on certain rerenders.\n    const callbacks = useMemo(\n        () => {\n            const callbacks = mapValues(customCallbacks, fn => e => fn({side, change}, e));\n            callbacks.onMouseEnter = composeCallback(markHover, callbacks.onMouseEnter);\n            callbacks.onMouseLeave = composeCallback(unmarkHover, callbacks.onMouseLeave);\n            return callbacks;\n        },\n        [change, customCallbacks, markHover, side, unmarkHover]\n    );\n    return callbacks;\n};\n\nconst renderCells = args => {\n    const {\n        change,\n        side,\n        selected,\n        tokens,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        anchorID,\n        gutterAnchor,\n        gutterAnchorTarget,\n        hideGutter,\n        hover,\n        renderToken,\n        renderGutter,\n    } = args;\n\n    if (!change) {\n        const gutterClassNameValue = classNames('diff-gutter', 'diff-gutter-omit', gutterClassName);\n        const codeClassNameValue = classNames('diff-code', 'diff-code-omit', codeClassName);\n\n        return [\n            !hideGutter && <td key=\"gutter\" className={gutterClassNameValue} />,\n            <td key=\"code\" className={codeClassNameValue} />,\n        ];\n    }\n\n    const {type, content} = change;\n    const sideName = side === SIDE_OLD ? 'old' : 'new';\n    const gutterClassNameValue = classNames(\n        'diff-gutter',\n        `diff-gutter-${type}`,\n        {\n            'diff-gutter-selected': selected,\n            ['diff-line-hover-' + sideName]: hover,\n        },\n        gutterClassName\n    );\n    const gutterOptions = {\n        change,\n        side: sideName,\n        inHoverState: hover,\n        renderDefault: renderDefaultBy(change, sideName),\n        wrapInAnchor: wrapInAnchorBy(gutterAnchor, gutterAnchorTarget),\n    };\n    const gutterProps = {\n        id: anchorID,\n        className: gutterClassNameValue,\n        children: renderGutter(gutterOptions),\n        ...gutterEvents,\n    };\n    const codeClassNameValue = classNames(\n        'diff-code',\n        `diff-code-${type}`,\n        {\n            'diff-code-selected': selected,\n            ['diff-line-hover-' + sideName]: hover,\n        },\n        codeClassName\n    );\n\n    return [\n        !hideGutter && <td key=\"gutter\" {...gutterProps} />,\n        <CodeCell\n            key=\"code\"\n            className={codeClassNameValue}\n            text={content}\n            tokens={tokens}\n            renderToken={renderToken}\n            {...codeEvents}\n        />,\n    ];\n};\n\nconst SplitChange = props => {\n    const {\n        className,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        oldChange,\n        newChange,\n        oldSelected,\n        newSelected,\n        oldTokens,\n        newTokens,\n        monotonous,\n        hideGutter,\n        generateAnchorID,\n        gutterAnchor,\n        renderToken,\n        renderGutter,\n    } = props;\n\n    const [hover, setHover] = useState('');\n    const oldGutterEvents = useCallbackOnSide('old', setHover, oldChange, gutterEvents);\n    const newGutterEvents = useCallbackOnSide('new', setHover, newChange, gutterEvents);\n    const oldCodeEvents = useCallbackOnSide('old', setHover, oldChange, codeEvents);\n    const newCodeEvents = useCallbackOnSide('new', setHover, newChange, codeEvents);\n    const oldAnchorID = oldChange && generateAnchorID(oldChange);\n    const newAnchorID = newChange && generateAnchorID(newChange);\n    const commons = {\n        monotonous,\n        hideGutter,\n        gutterClassName,\n        codeClassName,\n        gutterEvents,\n        codeEvents,\n        renderToken,\n        renderGutter,\n    };\n    const oldArgs = {\n        ...commons,\n        change: oldChange,\n        side: SIDE_OLD,\n        selected: oldSelected,\n        tokens: oldTokens,\n        gutterEvents: oldGutterEvents,\n        codeEvents: oldCodeEvents,\n        anchorID: oldAnchorID,\n        gutterAnchor: gutterAnchor,\n        gutterAnchorTarget: oldAnchorID,\n        hover: hover === 'old',\n    };\n    const newArgs = {\n        ...commons,\n        change: newChange,\n        side: SIDE_NEW,\n        selected: newSelected,\n        tokens: newTokens,\n        gutterEvents: newGutterEvents,\n        codeEvents: newCodeEvents,\n        anchorID: oldChange === newChange ? undefined : newAnchorID,\n        gutterAnchor: gutterAnchor,\n        gutterAnchorTarget: oldChange === newChange ? oldAnchorID : newAnchorID,\n        hover: hover === 'new',\n    };\n\n    if (monotonous) {\n        return (\n            <tr className={classNames('diff-line', className)}>\n                {renderCells(oldChange ? oldArgs : newArgs)}\n            </tr>\n        );\n    }\n\n    const lineTypeClassName = ((oldChange, newChange) => {\n        if (oldChange && !newChange) {\n            return 'diff-line-old-only';\n        }\n\n        if (!oldChange && newChange) {\n            return 'diff-line-new-only';\n        }\n\n        if (oldChange === newChange) {\n            return 'diff-line-normal';\n        }\n\n        return 'diff-line-compare';\n    })(oldChange, newChange);\n\n    return (\n        <tr className={classNames('diff-line', lineTypeClassName, className)}>\n            {renderCells(oldArgs)}\n            {renderCells(newArgs)}\n        </tr>\n    );\n};\n\n\nSplitChange.propTypes = {\n    oldSelected: PropTypes.bool.isRequired,\n    newSelected: PropTypes.bool.isRequired,\n    oldTokens: PropTypes.arrayOf(PropTypes.object),\n    newTokens: PropTypes.arrayOf(PropTypes.object),\n};\n\nSplitChange.defaultProps = {\n    oldTokens: null,\n    newTokens: null,\n};\n\nexport default memo(SplitChange);\n","const SplitWidget = ({oldElement, newElement, monotonous, hideGutter}) => {\n    if (monotonous) {\n        return (\n            <tr className=\"diff-widget\">\n                <td colSpan={hideGutter ? 1 : 2} className=\"diff-widget-content\">\n                    {oldElement || newElement}\n                </td>\n            </tr>\n        );\n    }\n\n    if (oldElement === newElement) {\n        return (\n            <tr className=\"diff-widget\">\n                <td colSpan={hideGutter ? 2 : 4} className=\"diff-widget-content\">\n                    {oldElement}\n                </td>\n            </tr>\n        );\n    }\n\n    return (\n        <tr className=\"diff-widget\">\n            <td colSpan={hideGutter ? 1 : 2} className=\"diff-widget-content\">\n                {oldElement}\n            </td>\n            <td colSpan={hideGutter ? 1 : 2} className=\"diff-widget-content\">\n                {newElement}\n            </td>\n        </tr>\n    );\n};\n\nexport default SplitWidget;\n","import classNames from 'classnames';\nimport {getChangeKey, computeOldLineNumber, computeNewLineNumber} from '../../utils';\nimport SplitChange from './SplitChange';\nimport SplitWidget from './SplitWidget';\n\nconst keyForPair = (x, y) => {\n    const keyForX = x ? getChangeKey(x) : '00';\n    const keyForY = y ? getChangeKey(y) : '00';\n    return keyForX + keyForY;\n};\n\nconst groupElements = (changes, widgets) => {\n    const findWidget = change => {\n        if (!change) {\n            return null;\n        }\n\n        const key = getChangeKey(change);\n        return widgets[key] || null;\n    };\n    const elements = [];\n\n    // This could be a very complex reduce call, use `for` loop seems to make it a little more readable\n    for (let i = 0; i < changes.length; i++) {\n        const current = changes[i];\n\n        // A normal change is displayed on both side\n        if (current.isNormal) {\n            elements.push(['change', keyForPair(current, current), current, current]);\n        }\n        else if (current.isDelete) {\n            const next = changes[i + 1];\n            // If an insert change is following a elete change, they should be displayed side by side\n            if (next && next.isInsert) {\n                i = i + 1;\n                elements.push(['change', keyForPair(current, next), current, next]);\n            }\n            else {\n                elements.push(['change', keyForPair(current, null), current, null]);\n            }\n        }\n        else {\n            elements.push(['change', keyForPair(null, current), null, current]);\n        }\n\n        const rowChanges = elements[elements.length - 1];\n        const [oldWidget, newWidget] = rowChanges.slice(2).map(findWidget);\n        if (oldWidget || newWidget) {\n            const key = rowChanges[1];\n            elements.push(['widget', key, oldWidget, newWidget]);\n        }\n    }\n\n    return elements;\n};\n\nconst renderRow = ([type, key, oldValue, newValue], props) => {\n    const {\n        selectedChanges,\n        monotonous,\n        hideGutter,\n        tokens,\n        lineClassName,\n        ...changeProps\n    } = props;\n\n    if (type === 'change') {\n        const oldSelected = oldValue ? selectedChanges.includes(getChangeKey(oldValue)) : false;\n        const newSelected = newValue ? selectedChanges.includes(getChangeKey(newValue)) : false;\n        const oldTokens = (oldValue && tokens) ? tokens.old[computeOldLineNumber(oldValue) - 1] : null;\n        const newTokens = (newValue && tokens) ? tokens.new[computeNewLineNumber(newValue) - 1] : null;\n\n        return (\n            <SplitChange\n                key={`change${key}`}\n                className={lineClassName}\n                oldChange={oldValue}\n                newChange={newValue}\n                monotonous={monotonous}\n                hideGutter={hideGutter}\n                oldSelected={oldSelected}\n                newSelected={newSelected}\n                oldTokens={oldTokens}\n                newTokens={newTokens}\n                {...changeProps}\n            />\n        );\n    }\n    else if (type === 'widget') {\n        return (\n            <SplitWidget\n                key={`widget${key}`}\n                monotonous={monotonous}\n                hideGutter={hideGutter}\n                oldElement={oldValue}\n                newElement={newValue}\n            />\n        );\n    }\n\n    return null;\n};\n\nconst SplitHunk = props => {\n    const {\n        hunk,\n        widgets,\n        className,\n        ...childrenProps\n    } = props;\n    const elements = groupElements(hunk.changes, widgets);\n\n    return (\n        <tbody className={classNames('diff-hunk', className)}>\n            {elements.map(item => renderRow(item, childrenProps))}\n        </tbody>\n    );\n};\n\nexport default SplitHunk;\n","import PropTypes from 'prop-types';\nimport {useDiffSettings} from '../context';\nimport UnifiedHunk from './UnifiedHunk';\nimport SplitHunk from './SplitHunk';\n\nconst Hunk = ({hunk, className, ...props}) => {\n    const {gutterType, ...context} = useDiffSettings();\n    const hideGutter = gutterType === 'none';\n    const gutterAnchor = gutterType === 'anchor';\n    const RenderingHunk = context.viewType === 'unified' ? UnifiedHunk : SplitHunk;\n\n    return (\n        <RenderingHunk\n            {...context}\n            {...props}\n            hunk={hunk}\n            hideGutter={hideGutter}\n            gutterAnchor={gutterAnchor}\n            className={className}\n        />\n    );\n};\n\nHunk.propTypes = (() => {\n    const change = {\n        type: PropTypes.oneOf(['delete', 'insert', 'normal']).isRequired,\n        content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n        isNormal: PropTypes.bool,\n        isInsert: PropTypes.bool,\n        isDelete: PropTypes.bool,\n        lineNumber: PropTypes.number,\n        oldLineNumber: PropTypes.number,\n        newLineNumber: PropTypes.number,\n    };\n\n    const hunk = {\n        oldStart: PropTypes.number.isRequired,\n        oldLines: PropTypes.number.isRequired,\n        newStart: PropTypes.number.isRequired,\n        newLines: PropTypes.number.isRequired,\n        content: PropTypes.string.isRequired,\n        changes: PropTypes.arrayOf(PropTypes.shape(change)).isRequired,\n    };\n\n    return {\n        hunk: PropTypes.shape(hunk).isRequired,\n        className: PropTypes.string,\n        lineClassName: PropTypes.string,\n        gutterClassName: PropTypes.string,\n        contentClassName: PropTypes.string,\n        gutterEvents: PropTypes.object,\n        codeEvents: PropTypes.object,\n    };\n})();\n\nHunk.defaultProps = {\n    className: '',\n    lineClassName: '',\n    gutterClassName: '',\n    contentClassName: '',\n    gutterEvents: {},\n    codeEvents: {},\n};\n\nexport default Hunk;\n","import {memo, useRef, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {Provider} from '../context';\nimport Hunk from '../Hunk';\n\nconst noop = () => {}; // eslint-disable-line no-empty-function\n\nconst findClosest = (target, className) => {\n    while (target && target !== document && !target.classList.contains(className)) {\n        target = target.parentNode; // eslint-disable-line no-param-reassign\n    }\n\n    return target === document ? null : target;\n};\n\nconst setUserSelectStyle = (element, selectable) => {\n    const value = selectable ? 'auto' : 'none';\n\n    if (element.style.userSelect !== value) {\n        element.style.userSelect = value; // eslint-disable-line no-param-reassign\n    }\n};\n\nconst Diff = props => {\n    const root = useRef(null);\n    const enableColumnSelection = useCallback(\n        ({target, button}) => {\n            if (button !== 0) {\n                return;\n            }\n\n            const closestCell = findClosest(target, 'diff-code');\n\n            if (!closestCell) {\n                return;\n            }\n\n            window.getSelection().removeAllRanges();\n\n            const index = [...closestCell.parentNode.children].indexOf(closestCell);\n\n            if (index !== 1 && index !== 3) {\n                return;\n            }\n\n            const lines = root.current.querySelectorAll('.diff-line');\n            for (const line of lines) {\n                const cells = line.children;\n                setUserSelectStyle(cells[1], index === 1);\n                setUserSelectStyle(cells[3], index === 3);\n            }\n        },\n        []\n    );\n\n    const {diffType, children, className, optimizeSelection, hunks, ...remainings} = props;\n    const {gutterType, viewType} = remainings;\n    const hideGutter = gutterType === 'none';\n    const monotonous = diffType === 'add' || diffType === 'delete';\n    const onTableMouseDown = (viewType === 'split' && !monotonous && optimizeSelection) ? enableColumnSelection : noop;\n    const cols = ((viewType, monotonous) => {\n        if (viewType === 'unified') {\n            return (\n                <colgroup>\n                    {!hideGutter && <col className=\"diff-gutter-col\" />}\n                    {!hideGutter && <col className=\"diff-gutter-col\" />}\n                    <col />\n                </colgroup>\n            );\n        }\n\n        if (monotonous) {\n            return (\n                <colgroup>\n                    {!hideGutter && <col className=\"diff-gutter-col\" />}\n                    <col />\n                </colgroup>\n            );\n        }\n\n        return (\n            <colgroup>\n                {!hideGutter && <col className=\"diff-gutter-col\" />}\n                <col />\n                {!hideGutter && <col className=\"diff-gutter-col\" />}\n                <col />\n            </colgroup>\n        );\n    })(props.viewType, monotonous);\n\n    return (\n        <Provider value={{...remainings, monotonous}}>\n            <table\n                ref={root}\n                className={classNames('diff', `diff-${viewType}`, className)}\n                onMouseDown={onTableMouseDown}\n            >\n                {cols}\n                {children(hunks)}\n            </table>\n        </Provider>\n    );\n};\n\nDiff.propTypes = {\n    diffType: PropTypes.oneOf(['add', 'delete', 'modify', 'rename', 'copy']).isRequired,\n    viewType: PropTypes.oneOf(['unified', 'split']).isRequired,\n    hunks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    gutterType: PropTypes.oneOf(['default', 'none', 'anchor']),\n    generateAnchorID: PropTypes.func,\n    selectedChanges: PropTypes.arrayOf(PropTypes.string),\n    widgets: PropTypes.objectOf(PropTypes.node),\n    optimizeSelection: PropTypes.bool,\n    className: PropTypes.string,\n    renderToken: PropTypes.func,\n    renderGutter: PropTypes.func,\n    children: PropTypes.func,\n};\n\nDiff.defaultProps = {\n    gutterType: 'default',\n    optimizeSelection: false,\n    selectedChanges: [],\n    widgets: {},\n    className: '',\n    renderToken: undefined,\n    renderGutter({renderDefault, wrapInAnchor}) {\n        return wrapInAnchor(renderDefault());\n    },\n    generateAnchorID() {\n        return undefined;\n    },\n    children(hunks) {\n        const key = hunk => `-${hunk.oldStart},${hunk.oldLines} +${hunk.newStart},${hunk.newLines}`;\n        return hunks.map(hunk => <Hunk key={key(hunk)} hunk={hunk} />);\n    },\n};\n\nexport default memo(Diff);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import {Children} from 'react';\nimport classNames from 'classnames';\n\nconst SplitDecoration = ({hideGutter, monotonous, className, gutterClassName, contentClassName, children}) => {\n    const computedClassName = classNames('diff-decoration', className);\n    const computedGutterClassName = classNames('diff-decoration-gutter', gutterClassName);\n    const computedContentClassName = classNames('diff-decoration-content', contentClassName);\n    const columnCount = (hideGutter ? 2 : 4) / (monotonous ? 2 : 1);\n    const headerContentColSpan = columnCount - (hideGutter ? 0 : 1);\n\n    // One element spans all gutter and content cells\n    if (Children.count(children) === 1) {\n        return (\n            <tbody className={computedClassName}>\n                <tr>\n                    <td colSpan={columnCount} className={computedContentClassName}>\n                        {children}\n                    </td>\n                </tr>\n            </tbody>\n        );\n    }\n\n    const [gutter, content] = children;\n\n    return (\n        <tbody className={computedClassName}>\n            <tr>\n                {!hideGutter && <td className={computedGutterClassName}>{gutter}</td>}\n                <td colSpan={headerContentColSpan} className={computedContentClassName}>{content}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nexport default SplitDecoration;\n","import {Children} from 'react';\nimport classNames from 'classnames';\n\nconst UnifiedDecoration = ({hideGutter, className, gutterClassName, contentClassName, children}) => {\n    const computedClassName = classNames('diff-decoration', className);\n    const computedGutterClassName = classNames('diff-decoration-gutter', gutterClassName);\n    const computedContentClassName = classNames('diff-decoration-content', contentClassName);\n\n    // One element spans all gutter and content cells\n    if (Children.count(children) === 1) {\n        return (\n            <tbody className={computedClassName}>\n                <tr>\n                    <td colSpan={hideGutter ? 1 : 3} className={computedContentClassName}>\n                        {children}\n                    </td>\n                </tr>\n            </tbody>\n        );\n    }\n\n    const [gutter, content] = children;\n\n    return (\n        <tbody className={computedClassName}>\n            <tr>\n                {!hideGutter && <td colSpan={2} className={computedGutterClassName}>{gutter}</td>}\n                <td className={computedContentClassName}>{content}</td>\n            </tr>\n        </tbody>\n    );\n};\n\nexport default UnifiedDecoration;\n","import {Children} from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport {useDiffSettings} from '../context';\nimport SplitDecoration from './SplitDecoration';\nimport UnifiedDecoration from './UnifiedDecoration';\n\nconst Decoration = props => {\n    const childrenCount = Children.count(props.children);\n\n    warning(\n        childrenCount <= 2,\n        'Decoration only accepts a maxium of 2 children'\n    );\n\n    warning(\n        childrenCount < 2 || !props.hideGutter,\n        'Gutter element in decoration will not be rendered since hideGutter prop is set to true'\n    );\n\n    const {viewType, gutterType, monotonous} = useDiffSettings();\n    const RenderingDecoration = viewType === 'split' ? SplitDecoration : UnifiedDecoration;\n\n    return (\n        <RenderingDecoration\n            hideGutter={gutterType === 'none'}\n            monotonous={monotonous}\n            {...props}\n        />\n    );\n};\n\nDecoration.propTypes = {\n    className: PropTypes.string,\n    gutterClassName: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node.isRequired,\n};\n\nDecoration.defaultProps = {\n    className: '',\n    gutterClassName: '',\n    contentClassName: '',\n};\n\nexport default Decoration;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var LodashWrapper = require('./_LodashWrapper'),\n    flatRest = require('./_flatRest'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    isArray = require('./isArray'),\n    isLaziable = require('./_isLaziable');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nmodule.exports = createFlow;\n","var createFlow = require('./_createFlow');\n\n/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flow = createFlow();\n\nmodule.exports = flow;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","import {flatMap, last, keyBy} from 'lodash';\nimport {computeOldLineNumber, computeNewLineNumber} from '../utils';\n\n// This function mutates `linesOfCode` argument.\nconst applyHunk = (linesOfCode, {newStart, changes}) => {\n    // Within each hunk, changes are continous, so we can use a sequential algorithm here.\n    //\n    // When `linesOfCode` is received here, it has already patched by previous hunk,\n    // thus the starting line number has changed due to possible unbanlanced deletions and insertions,\n    // we should use `newStart` as the first line number of current reduce.\n    const [patchedLines] = changes.reduce(\n        ([lines, cursor], {content, isInsert, isDelete}) => {\n            if (isDelete) {\n                lines.splice(cursor, 1);\n                return [lines, cursor];\n            }\n\n            if (isInsert) {\n                lines.splice(cursor, 0, content);\n            }\n            return [lines, cursor + 1];\n        },\n        [linesOfCode, newStart - 1]\n    );\n\n    return patchedLines;\n};\n\nconst applyDiff = (oldSource, hunks) => {\n    // `hunks` must be ordered here.\n    const patchedLines = hunks.reduce(applyHunk, oldSource.split('\\n'));\n    return patchedLines.join('\\n');\n};\n\nconst mapChanges = (changes, side, toValue) => {\n    if (!changes.length) {\n        return [];\n    }\n\n    const computeLineNumber = side === 'old' ? computeOldLineNumber : computeNewLineNumber;\n    const changesByLineNumber = keyBy(changes, computeLineNumber);\n    const maxLineNumber = computeLineNumber(last(changes));\n    return Array.from({length: maxLineNumber}).map((value, i) => toValue(changesByLineNumber[i + 1]));\n};\n\nconst groupChanges = hunks => {\n    const changes = flatMap(hunks, hunk => hunk.changes);\n    return changes.reduce(\n        ([oldChanges, newChanges], change) => {\n            if (change.isNormal) {\n                oldChanges.push(change);\n                newChanges.push(change);\n            }\n            else if (change.isDelete) {\n                oldChanges.push(change);\n            }\n            else {\n                newChanges.push(change);\n            }\n\n            return [oldChanges, newChanges];\n        },\n        [[], []]\n    );\n};\n\nconst toTextPair = hunks => {\n    const [oldChanges, newChanges] = groupChanges(hunks);\n    const toText = change => (change ? change.content : '');\n    const oldText = mapChanges(oldChanges, 'old', toText).join('\\n');\n    const newText = mapChanges(newChanges, 'new', toText).join('\\n');\n\n    return [oldText, newText];\n};\n\nconst createRoot = children => ({type: 'root', children: children});\n\nexport default (hunks, {highlight, refractor, oldSource, language}) => {\n    if (oldSource) {\n        const newSource = applyDiff(oldSource, hunks);\n        const highlightText = highlight\n            ? (text, language) => refractor.highlight(text, language)\n            : text => [{type: 'text', value: text}];\n\n        return [\n            createRoot(highlightText(oldSource, language)),\n            createRoot(highlightText(newSource, language)),\n        ];\n    }\n\n    const textPair = toTextPair(hunks);\n    const toTree = highlight\n        ? text => createRoot(refractor.highlight(text, language))\n        : text => createRoot([{type: 'text', value: text}]);\n\n    return textPair.map(toTree);\n};\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","import {last} from 'lodash';\n\nexport const clone = path => path.map(node => ({...node}));\n\nexport const replace = (path, leaf) => [...clone(path.slice(0, -1)), leaf];\n\nexport const wrap = (path, parent) => [parent, ...clone(path)];\n\nexport const split = (path, splitStart, splitEnd, wrapSplitNode) => {\n    const parents = path.slice(0, -1);\n    const leaf = last(path);\n    const output = [];\n\n    if (splitEnd <= 0 || splitStart >= leaf.value.length) {\n        return [path];\n    }\n\n    const split = (start, end) => {\n        const value = leaf.value.slice(start, end);\n        return [...parents, {...leaf, value}];\n    };\n\n    if (splitStart > 0) {\n        const head = split(0, splitStart);\n        output.push(clone(head));\n    }\n\n    const body = split(Math.max(splitStart, 0), splitEnd);\n    output.push(wrapSplitNode ? wrap(body, wrapSplitNode) : clone(body));\n\n    if (splitEnd < leaf.value.length) {\n        const tail = split(splitEnd);\n        output.push(clone(tail));\n    }\n\n    return output;\n};\n","import {last, omit} from 'lodash';\nimport {clone, replace} from './utils';\n\nconst treeToPathList = (node, output = [], path = []) => {\n    const nodeToUse = omit(node, 'children');\n\n    if (node.children) {\n        path.push(nodeToUse);\n        for (const child of node.children) {\n            treeToPathList(child, output, path);\n        }\n        path.pop();\n    }\n    else {\n        output.push(clone([...path.slice(1), nodeToUse]));\n    }\n\n    return output;\n};\n\nconst splitPathToLines = path => {\n    const leaf = last(path);\n\n    if (!leaf.value.includes('\\n')) {\n        return [path];\n    }\n\n    const linesOfText = leaf.value.split('\\n');\n    return linesOfText.map(line => replace(path, {...leaf, value: line}));\n};\n\nconst splitByLineBreak = paths => paths.reduce(\n    (lines, path) => {\n        const currentLine = last(lines);\n        const [currentRemaining, ...nextLines] = splitPathToLines(path);\n        return [\n            ...lines.slice(0, -1),\n            [...currentLine, currentRemaining],\n            ...nextLines.map(path => [path]),\n        ];\n    },\n    [[]]\n);\n\nexport default tree => {\n    const paths = treeToPathList(tree);\n    const linesOfPaths = splitByLineBreak(paths);\n    return linesOfPaths;\n};\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import {last, isEqual, omit} from 'lodash';\n\nconst areNodesMeregable = (x, y) => {\n    if (x.type !== y.type) {\n        return false;\n    }\n\n    if (x.type === 'text') {\n        return true;\n    }\n\n    if (!x.children || !y.children) {\n        return false;\n    }\n\n    const xBase = 'children' in x ? omit(x, 'children') : x;\n    const yBase = 'children' in y ? omit(y, 'children') : y;\n\n    return isEqual(xBase, yBase);\n};\n\nconst mergeNode = (x, y) => {\n    if ('value' in x) {\n        return {\n            ...x,\n            value: x.value + y.value,\n        };\n    }\n\n    return x;\n};\n\nconst attachNode = (parent, node) => {\n    const previousSibling = last(parent.children);\n\n    if (previousSibling && areNodesMeregable(previousSibling, node)) {\n        /* eslint-disable no-param-reassign */\n        parent.children[parent.children.length - 1] = mergeNode(previousSibling, node);\n        /* eslint-enable no-param-reassign */\n    }\n    else {\n        parent.children.push(node);\n    }\n\n    return last(parent.children);\n};\n\nexport default pathList => {\n    const root = {type: 'root', children: []};\n\n    for (const path of pathList) {\n        path.reduce(\n            (parent, node, i) => {\n                const nodeToUse = i === path.length - 1 ? {...node} : {...node, children: []};\n                return attachNode(parent, nodeToUse);\n            },\n            root\n        );\n    }\n\n    return root;\n};\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","/**\n * @file 在高亮的语法节点上插入代码定义与引用的信息\n * @author zhanglili\n */\n\nimport {last, isEmpty, groupBy} from 'lodash';\nimport {split} from './utils';\n\nconst splitPathToEncloseRange = (paths, node) => {\n    const {start, length, properties} = node;\n    const rangeEnd = start + length;\n    const [output] = paths.reduce(\n        ([output, nodeStart], path) => {\n            const leaf = last(path);\n            const nodeEnd = nodeStart + leaf.value.length;\n\n            if (nodeStart > rangeEnd || nodeEnd < start) {\n                output.push(path);\n            }\n            else {\n                // it should be just node in next major release\n                const wrapNode = {...node, ...properties};\n                const segments = split(path, start - nodeStart, rangeEnd - nodeStart, wrapNode);\n                output.push(...segments);\n            }\n\n            return [output, nodeEnd];\n        },\n        [[], 0]\n    );\n\n    return output;\n};\n\nconst pickRangesFromPath = (paths, ranges) => {\n    if (isEmpty(ranges)) {\n        return paths;\n    }\n\n    return ranges.reduce(splitPathToEncloseRange, paths);\n};\n\nconst process = (linesOfPaths, ranges) => {\n    const rangesByLine = groupBy(ranges, 'lineNumber');\n    return linesOfPaths.map((line, i) => pickRangesFromPath(line, rangesByLine[i + 1]));\n};\n\nexport default (oldRanges, newRanges) => ([oldLinesOfPaths, newLinesOfPaths]) => [\n    process(oldLinesOfPaths, oldRanges),\n    process(newLinesOfPaths, newRanges),\n];\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nvar diff_match_patch = function() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n};\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Class representing one diff tuple.\n * ~Attempts to look like a two-element array (which is what this used to be).~\n * Constructor returns an actual two-element array, to allow destructing @JackuB\n * See https://github.com/JackuB/diff-match-patch/issues/14 for details\n * @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n * @param {string} text Text to be deleted, inserted, or retained.\n * @constructor\n */\ndiff_match_patch.Diff = function(op, text) {\n  return [op, text];\n};\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number=} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [new diff_match_patch.Diff(DIFF_EQUAL, text1)];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, commonprefix));\n  }\n  if (commonsuffix) {\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, commonsuffix));\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1)];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [new diff_match_patch.Diff(DIFF_INSERT, longtext.substring(0, i)),\n             new diff_match_patch.Diff(DIFF_EQUAL, shorttext),\n             new diff_match_patch.Diff(DIFF_INSERT,\n                 longtext.substring(i + shorttext.length))];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n            new diff_match_patch.Diff(DIFF_INSERT, text2)];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([new diff_match_patch.Diff(DIFF_EQUAL, mid_common)],\n                          diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var subDiff =\n              this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = subDiff.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, subDiff[j]);\n          }\n          pointer = pointer + subDiff.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [new diff_match_patch.Diff(DIFF_DELETE, text1),\n          new diff_match_patch.Diff(DIFF_INSERT, text2)];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength == maxLines) {\n          // Bail out at 65535 because\n          // String.fromCharCode(65536) == String.fromCharCode(0)\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  // Allocate 2/3rds of the space for text1, the rest for text2.\n  var maxLines = 40000;\n  var chars1 = diff_linesToCharsMunge_(text1);\n  maxLines = 65535;\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var i = 0; i < diffs.length; i++) {\n    var chars = diffs[i][1];\n    var text = [];\n    for (var j = 0; j < chars.length; j++) {\n      text[j] = lineArray[chars.charCodeAt(j)];\n    }\n    diffs[i][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: https://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastEquality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastEquality && (lastEquality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastEquality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastEquality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              insertion.substring(0, overlap_length1)));\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n              deletion.substring(0, overlap_length2)));\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastEquality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastEquality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastEquality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastEquality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     new diff_match_patch.Diff(DIFF_DELETE, lastEquality));\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastEquality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  // Add a dummy entry at the end.\n  diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, new diff_match_patch.Diff(DIFF_EQUAL,\n                    text_insert.substring(0, commonlength)));\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          pointer -= count_delete + count_insert;\n          diffs.splice(pointer, count_delete + count_insert);\n          if (text_delete.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_DELETE, text_delete));\n            pointer++;\n          }\n          if (text_insert.length) {\n            diffs.splice(pointer, 0,\n                new diff_match_patch.Diff(DIFF_INSERT, text_insert));\n            pointer++;\n          }\n          pointer++;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] =\n              new diff_match_patch.Diff(DIFF_INSERT, decodeURI(param));\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_EQUAL, text);\n        } else {\n          diffs[diffsLength++] = new diff_match_patch.Diff(DIFF_DELETE, text);\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  if (patch.start2 === null) {\n    throw Error('patch not initialized');\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, prefix));\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, suffix));\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>=} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // https://github.com/google/diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] =\n          new diff_match_patch.Diff(patch.diffs[y][0], patch.diffs[y][1]);\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, nullPadding));\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, precontext));\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push(new diff_match_patch.Diff(diff_type, diff_text));\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, postcontext));\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_DELETE, line));\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_INSERT, line));\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push(new diff_match_patch.Diff(DIFF_EQUAL, line));\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indices are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","import {findIndex, flatMap, last, flatten} from 'lodash';\nimport DiffMatchPatch from 'diff-match-patch';\nimport pickRanges from './pickRanges';\n\nconst {DIFF_EQUAL, DIFF_DELETE, DIFF_INSERT} = DiffMatchPatch;\n\nconst findChangeBlocks = changes => {\n    const start = findIndex(changes, change => !change.isNormal);\n\n    if (start === -1) {\n        return [];\n    }\n\n    const end = findIndex(changes, change => change.isNormal, start);\n\n    if (end === -1) {\n        return [changes.slice(start)];\n    }\n\n    return [\n        changes.slice(start, end),\n        ...findChangeBlocks(changes.slice(end)),\n    ];\n};\n\nconst groupDiffs = diffs => diffs.reduce(\n    ([oldDiffs, newDiffs], diff) => {\n        const [type] = diff;\n\n        switch (type) {\n            case DIFF_INSERT:\n                newDiffs.push(diff);\n                break;\n            case DIFF_DELETE:\n                oldDiffs.push(diff);\n                break;\n            default:\n                oldDiffs.push(diff);\n                newDiffs.push(diff);\n                break;\n        }\n\n        return [oldDiffs, newDiffs];\n    },\n    [[], []]\n);\n\nconst splitDiffToLines = diffs => diffs.reduce(\n    (lines, [type, value]) => {\n        const currentLines = value.split('\\n');\n\n        const [currentLineRemaining, ...nextLines] = currentLines.map(line => [type, line]);\n        const next = [\n            ...lines.slice(0, -1),\n            [...last(lines), currentLineRemaining],\n            ...nextLines.map(line => [line]),\n        ];\n        return next;\n    },\n    [[]]\n);\n\nconst diffsToEdits = (diffs, lineNumber) => {\n    const output = diffs.reduce(\n        (output, diff) => {\n            const [edits, start] = output;\n            const [type, value] = diff;\n            if (type !== DIFF_EQUAL) {\n                const edit = {\n                    type: 'edit',\n                    lineNumber: lineNumber,\n                    start: start,\n                    length: value.length,\n                };\n                edits.push(edit);\n            }\n\n            return [edits, start + value.length];\n        },\n        [[], 0]\n    );\n\n    return output[0];\n};\n\nconst convertToLinesOfEdits = (linesOfDiffs, startLineNumber) => flatMap(\n    linesOfDiffs,\n    (diffs, i) => diffsToEdits(diffs, startLineNumber + i)\n);\n\nconst diffText = (x, y) => {\n    const dmp = new DiffMatchPatch();\n    const diffs = dmp.diff_main(x, y);\n    dmp.diff_cleanupSemantic(diffs);\n\n    if (diffs.length <= 1) {\n        return [[], []];\n    }\n\n    return groupDiffs(diffs);\n};\n\nconst diffChangeBlock = changes => {\n    const [oldSource, newSource] = changes.reduce(\n        ([oldSource, newSource], {isDelete, content}) => (\n            isDelete\n                ? [oldSource + (oldSource ? '\\n' : '') + content, newSource]\n                : [oldSource, newSource + (newSource ? '\\n' : '') + content]\n        ),\n        ['', '']\n    );\n\n    const [oldDiffs, newDiffs] = diffText(oldSource, newSource);\n\n    if (oldDiffs.length === 0 && newDiffs.length === 0) {\n        return [oldDiffs, newDiffs];\n    }\n\n    const getLineNumber = change => change && change.lineNumber;\n    const oldStartLineNumber = getLineNumber(changes.find(change => change.isDelete));\n    const newStartLineNumber = getLineNumber(changes.find(change => change.isInsert));\n    const oldEdits = convertToLinesOfEdits(splitDiffToLines(oldDiffs), oldStartLineNumber);\n    const newEdits = convertToLinesOfEdits(splitDiffToLines(newDiffs), newStartLineNumber);\n\n    return [oldEdits, newEdits];\n};\n\nconst diffByLine = changes => changes.reduce(\n    ([oldEdits, newEdits, previousChange], currentChange) => {\n        if (!previousChange.isDelete || !currentChange.isInsert) {\n            return [oldEdits, newEdits, currentChange];\n        }\n\n        const [oldDiffs, newDiffs] = diffText(previousChange.content, currentChange.content);\n        return [\n            oldEdits.concat(diffsToEdits(oldDiffs, previousChange.lineNumber)),\n            newEdits.concat(diffsToEdits(newDiffs, currentChange.lineNumber)),\n            currentChange,\n        ];\n    },\n    [[], [], {}]\n);\n\nexport default (hunks, {type = 'block'} = {}) => {\n    const changeBlocks = flatMap(hunks.map(hunk => hunk.changes), findChangeBlocks);\n    const findEdits = type === 'block' ? diffChangeBlock : diffByLine;\n\n    const [oldEdits, newEdits] = changeBlocks.map(findEdits).reduce(\n        ([oldEdits, newEdits], [currentOld, currentNew]) => [\n            oldEdits.concat(currentOld),\n            newEdits.concat(currentNew),\n        ],\n        [[], []]\n    );\n\n    return pickRanges(flatten(oldEdits), flatten(newEdits));\n};\n","import {flatMap, last} from 'lodash';\nimport {replace} from './utils';\n\nconst markInPaths = (word, name, replacement) => paths => flatMap(\n    paths,\n    path => {\n        const leaf = last(path);\n\n        if (!leaf.value.includes(word)) {\n            return [path];\n        }\n\n        const segments = leaf.value.split(word);\n\n        return segments.reduce(\n            (output, text, i) => {\n                if (i !== 0) {\n                    output.push(replace(path, {type: 'mark', markType: name, value: replacement}));\n                }\n\n                if (text) {\n                    output.push(replace(path, {...leaf, value: text}));\n                }\n\n                return output;\n            },\n            []\n        );\n    }\n);\n\nexport default (word, name, replacement = word) => {\n    const mark = markInPaths(word, name, replacement);\n\n    return ([oldLinesOfPaths, newLinesOfPaths]) => [\n        oldLinesOfPaths.map(mark),\n        newLinesOfPaths.map(mark),\n    ];\n};\n","// Based on https://github.com/acdlite/recompose/blob/a255b23/src/packages/recompose/getDisplayName.js\nconst getDisplayName = Component => {\n    return (typeof Component === 'string' || Component == null)\n        ? Component\n        : Component.displayName || Component.name || 'Component';\n};\n\n// based on https://github.com/acdlite/recompose/blob/d55575f/src/packages/recompose/wrapDisplayName.js\nexport const wrapDisplayName = (BaseComponent, hocName) => `${hocName}(${getDisplayName(BaseComponent)})`;\n","import {useMemo} from 'react';\nimport {expandCollapsedBlockBy} from '../utils';\n\nexport default (minLinesExclusive, hunks, oldSource) => {\n    if (!oldSource) {\n        return hunks;\n    }\n\n    const renderingHunks = useMemo(\n        () => {\n            const predicate = lines => lines < minLinesExclusive;\n\n            return expandCollapsedBlockBy(hunks, oldSource, predicate);\n        },\n        [minLinesExclusive, hunks, oldSource]\n    );\n\n    return renderingHunks;\n};\n","import {useReducer, useRef} from 'react';\n\nconst updateCollection = (collection, {type, value}) => {\n    switch (type) {\n        case 'push':\n            return [...collection, value];\n        case 'clear':\n            return collection.length ? [] : collection;\n        case 'toggle':\n            return collection.includes(value)\n                ? collection.filter(item => item !== value)\n                : collection.concat(value);\n        case 'only':\n            return [value];\n        default:\n            return collection;\n    }\n};\n\nexport const useCollection = () => {\n    const [collection, dispatch] = useReducer(updateCollection, []);\n\n    return {\n        collection,\n        clear() {\n            dispatch({type: 'clear'});\n        },\n        push(value) {\n            dispatch({value, type: 'push'});\n        },\n        toggle(value) {\n            dispatch({value, type: 'toggle'});\n        },\n        only(value) {\n            dispatch({value, type: 'only'});\n        },\n    };\n};\n\n// This is actually a hack around the lack of custom comparator support in `useEffect` hook.\nexport const useCustomEqualIdentifier = (value, equals) => {\n    const cache = useRef({});\n    const identifier = useRef(0);\n    const isEqual = equals(value, cache.current);\n\n    if (!isEqual) {\n        cache.current = value;\n        identifier.current = identifier.current + 1;\n    }\n\n    return identifier.current;\n};\n","import {useEffect} from 'react';\nimport {getChangeKey} from '../utils';\nimport {useCollection} from './helpers';\n\nexport default (hunks, {multiple = false} = {}) => {\n    const {collection, clear, toggle, only} = useCollection();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(clear, [hunks]);\n\n    return [\n        collection,\n        ({change}) => {\n            const changeKey = getChangeKey(change);\n            if (multiple) {\n                toggle(changeKey);\n            }\n            else {\n                only(changeKey);\n            }\n        },\n    ];\n};\n","import {useEffect, useMemo} from 'react';\nimport {expandFromRawCode} from '../utils';\nimport {useCollection} from './helpers';\n\nexport default (hunks, oldSource) => {\n    const {collection: expandedRanges, clear, push} = useCollection();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(clear, [hunks, oldSource]);\n    const linesOfOldSource = useMemo(() => (oldSource || '').split('\\n'), [oldSource]);\n    const renderingHunks = useMemo(\n        () => {\n            if (!linesOfOldSource.length) {\n                return hunks;\n            }\n\n            return expandedRanges.reduce(\n                (hunks, [start, end]) => expandFromRawCode(hunks, linesOfOldSource, start, end),\n                hunks\n            );\n        },\n        [linesOfOldSource, hunks, expandedRanges]\n    );\n\n    return [\n        renderingHunks,\n        (start, end) => push([start, end]),\n    ];\n};\n","export type validObjectValue = Record<string, any> | null | undefined;\n\nexport default function shallowEqualObjects<T>(\n  objA: validObjectValue,\n  objB: validObjectValue\n): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    const key = aKeys[i];\n\n    if (\n      objA[key] !== objB[key] ||\n      !Object.prototype.hasOwnProperty.call(objB, key)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import {useState, useRef, useEffect} from 'react';\nimport {shallowEqualArrays, shallowEqualObjects} from 'shallow-equal';\nimport {flatMap} from 'lodash';\nimport {useCustomEqualIdentifier} from './helpers';\n\nconst uid = (() => {\n    let current = 0;\n\n    return () => {\n        current = current + 1;\n        return current;\n    };\n})();\n\nconst findAbnormalChanges = hunks => flatMap(hunks, hunk => hunk.changes.filter(change => !change.isNormal));\n\nconst areHunksEqual = (xHunks, yHunks) => {\n    const xChanges = findAbnormalChanges(xHunks);\n    const yChanges = findAbnormalChanges(yHunks);\n\n    return shallowEqualArrays(xChanges, yChanges);\n};\n\nconst defaultShouldTokenize = ({hunks: currentHunks, ...currentPayload}, {hunks: prevHunks, ...prevPayload}) => {\n    if (currentPayload.oldSource !== prevPayload.oldSource) {\n        return true;\n    }\n\n    // When `oldSource` is provided, we can get the new source by applying diff,\n    // so when hunks keep identical, the tokenize result will always remain the same.\n    if (currentPayload.oldSource) {\n        return !shallowEqualObjects(currentPayload, prevPayload) || !areHunksEqual(currentHunks, prevHunks);\n    }\n\n    return currentHunks !== prevHunks || !shallowEqualObjects(currentPayload, prevPayload);\n};\n\nexport default (worker, payload, options = {}) => {\n    const {shouldTokenize = defaultShouldTokenize} = options;\n    const payloadIdentifier = useCustomEqualIdentifier(\n        payload,\n        (current, previous) => !shouldTokenize(current, previous)\n    );\n    const [tokenizeResult, setTokenizeResult] = useState({tokens: null, tokenizationFailReason: null});\n    const job = useRef(null);\n    useEffect(\n        () => {\n            const receiveTokens = ({data: {payload, id}}) => {\n                if (id !== job.current) {\n                    return;\n                }\n\n                if (payload.success) {\n                    setTokenizeResult({tokens: payload.tokens, tokenizationFailReason: null});\n                }\n                else {\n                    setTokenizeResult({tokens: null, tokenizationFailReason: payload.reason});\n                }\n            };\n            worker.addEventListener('message', receiveTokens);\n            return () => worker.removeEventListener('message', receiveTokens);\n        },\n        [worker] // We don't really expect the worker to be changed in an application's lifecycle\n    );\n    useEffect(\n        () => {\n            job.current = uid();\n            const data = {\n                payload,\n                id: job.current,\n                type: 'tokenize',\n            };\n            worker.postMessage(data);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [payloadIdentifier, worker, shouldTokenize] // TODO: How about worker changes when payload keeps identical?\n    );\n\n    return tokenizeResult;\n};\n","export type validArrayValue = any[] | null | undefined;\n\nexport default function shallowEqualArrays(\n  arrA: validArrayValue,\n  arrB: validArrayValue\n): boolean {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  const len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import {wrapDisplayName} from './wrapDisplayName';\nimport {useTokenizeWorker} from '../hooks';\n\nconst defaultMapPayload = data => {\n    return data;\n};\n\nexport default (worker, options = {}) => {\n    const {mapPayload = defaultMapPayload, ...hookOptions} = options;\n\n    const resolveMessagePayload = props => {\n        const {hunks, oldSource, language} = props;\n        const input = {\n            language: language,\n            oldSource: oldSource,\n            hunks: hunks,\n        };\n        return mapPayload(input, props);\n    };\n\n    return ComponentIn => {\n        const ComponentOut = props => {\n            const payload = resolveMessagePayload(props);\n            const tokenizationResult = useTokenizeWorker(worker, payload, hookOptions);\n\n            return <ComponentIn {...props} {...tokenizationResult} />;\n        };\n\n        ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withTokenizeWorker');\n\n        return ComponentOut;\n    };\n};\n","import {wrapDisplayName} from './wrapDisplayName';\nimport {useMinCollapsedLines} from '../hooks';\n\nexport default minLinesExclusive => ComponentIn => {\n    const ComponentOut = props => {\n        const renderingHunks = useMinCollapsedLines(minLinesExclusive, props.hunks, props.oldSource);\n        return <ComponentIn {...props} hunks={renderingHunks} />;\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'minCollapsedLines');\n\n    return ComponentOut;\n};\n","import {flow} from 'lodash';\nimport toTokenTrees from './toTokenTrees';\nimport normalizeToLines from './normalizeToLines';\nimport backToTree from './backToTree';\n\nexport const tokenize = (hunks, options) => {\n    const {\n        highlight = false,\n        refractor,\n        oldSource,\n        language,\n        enhancers = [],\n    } = options;\n\n    const tokenTreesPair = toTokenTrees(hunks, {highlight, refractor, oldSource, language});\n    const linesOfPathsPair = tokenTreesPair.map(normalizeToLines);\n\n    const enhance = flow(enhancers);\n    const enhancedLinesOfPathsPair = enhance(linesOfPathsPair);\n    const [oldTrees, newTrees] = enhancedLinesOfPathsPair.map(paths => paths.map(backToTree));\n    return {\n        old: oldTrees.map(root => root.children),\n        new: newTrees.map(root => root.children),\n    };\n};\n\nexport pickRanges from './pickRanges';\n\nexport markEdits from './markEdits';\n\nexport markWord from './markWord';\n","import {wrapDisplayName} from './wrapDisplayName';\nimport {useChangeSelect} from '../hooks';\n\nexport default options => ComponentIn => {\n    const ComponentOut = props => {\n        const [selectedChanges, toggleChangeSelection] = useChangeSelect(props.hunks, options);\n\n        return (\n            <ComponentIn\n                {...props}\n                selectedChanges={selectedChanges}\n                onToggleChangeSelection={toggleChangeSelection}\n            />\n        );\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withChangeSelect');\n\n    return ComponentOut;\n};\n","import {wrapDisplayName} from './wrapDisplayName';\nimport {useSourceExpansion} from '../hooks';\n\nexport default () => ComponentIn => {\n    const ComponentOut = props => {\n        const [renderingHunks, expandRange] = useSourceExpansion(props.hunks, props.oldSource);\n\n        return (\n            <ComponentIn\n                {...props}\n                hunks={renderingHunks}\n                onExpandRange={expandRange}\n            />\n        );\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withSourceExpansion');\n\n    return ComponentOut;\n};\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","window","ContextType","createContext","Provider","useDiffSettings","useContext","first","array","last","sideToProperty","side","computeLineNumberFactory","_ref","isNormal","isInsert","lineNumber","oldLineNumber","_ref2","isDelete","newLineNumber","isInHunkFactory","startProperty","linesProperty","hunk","start","end","isBetweenHunksFactory","previousHunk","nextHunk","findChangeByLineNumberFactory","computeLineNumber","findContainerHunk","_sideToProperty2","_slicedToArray","isInHunk","hunks","find","findContainerHunkFactory","containerHunk","changes","change","getCorrespondingLineNumberFactory","baseSide","anotherSide","_sideToProperty4","baseStart","baseLines","_sideToProperty6","correspondingStart","correspondingLines","baseLineNumber","correspondingLineNumber","isBetweenHunks","firstHunk","spanFromStart","lastHunk","spanFromEnd","currentHunk","changeIndex","findIndex","possibleCorrespondingChangeIndex","possibleCorrespondingChange","negativeChangeType","type","Error","_baseFindIndex","predicate","fromIndex","fromRight","index","_listCacheClear","this","__data__","size","eq_1","value","other","_assocIndexOf","eq","splice","_listCacheDelete","data","assocIndexOf","pop","_listCacheGet","undefined","_listCacheHas","_listCacheSet","ListCache","entries","clear","entry","set","listCacheClear","listCacheDelete","get","listCacheGet","has","listCacheHas","listCacheSet","_ListCache","_stackClear","_stackDelete","result","_stackGet","_stackHas","_freeGlobal","global","freeSelf","self","_root","freeGlobal","Function","_Symbol","root","Symbol","objectProto","nativeObjectToString","symToStringTag","toStringTag","_getRawTag","isOwn","tag","unmasked","e","_objectToString","nullTag","undefinedTag","_baseGetTag","getRawTag","objectToString","isObject_1","asyncTag","funcTag","genTag","proxyTag","isFunction_1","isObject","baseGetTag","_coreJsData","maskSrcKey","uid","exec","coreJsData","keys","IE_PROTO","_isMasked","func","funcToString","_toSource","reIsHostCtor","funcProto","reIsNative","RegExp","replace","_baseIsNative","isMasked","isFunction","test","toSource","_getValue","object","_getNative","getValue","baseIsNative","_Map","getNative","_nativeCreate","_hashClear","nativeCreate","_hashDelete","HASH_UNDEFINED","_hashGet","_hashHas","_hashSet","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","_Hash","_mapCacheClear","hash","map","Map","string","_isKeyable","_getMapData","isKeyable","_mapCacheDelete","getMapData","_mapCacheGet","_mapCacheHas","_mapCacheSet","MapCache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","_MapCache","LARGE_ARRAY_SIZE","_stackSet","pairs","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","_Stack","_setCacheAdd","_setCacheHas","SetCache","values","add","setCacheAdd","setCacheHas","_SetCache","_arraySome","_cacheHas","cache","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","_equalArrays","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","arrStacked","othStacked","seen","arrValue","othValue","compared","arraySome","othIndex","cacheHas","_Uint8Array","Uint8Array","_mapToArray","forEach","_setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","_equalByTag","byteLength","byteOffset","buffer","name","message","convert","mapToArray","setToArray","stacked","equalArrays","_arrayPush","offset","isArray_1","_baseGetAllKeys","keysFunc","symbolsFunc","arrayPush","_arrayFilter","resIndex","stubArray_1","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","_getSymbols","arrayFilter","symbol","stubArray","_baseTimes","n","iteratee","isObjectLike_1","argsTag","_baseIsArguments","isObjectLike","isArguments_1","baseIsArguments","stubFalse_1","freeExports","nodeType","freeModule","Buffer","isBuffer","stubFalse","MAX_SAFE_INTEGER","reIsUint","_isIndex","isLength_1","typedArrayTags","_baseIsTypedArray","isLength","_baseUnary","freeProcess","process","nodeUtil","types","require","binding","nodeIsTypedArray","isTypedArray","isTypedArray_1","baseUnary","baseIsTypedArray","_arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","baseTimes","String","isIndex","_isPrototype","Ctor","constructor","_overArg","transform","_nativeKeys","overArg","_baseKeys","isPrototype","nativeKeys","isArrayLike_1","keys_1","isArrayLike","arrayLikeKeys","baseKeys","_getAllKeys","baseGetAllKeys","getSymbols","_equalObjects","objProps","getAllKeys","objLength","objStacked","skipCtor","objValue","objCtor","othCtor","_DataView","_Promise","_Set","_WeakMap","dataViewCtorString","DataView","mapCtorString","promiseCtorString","Promise","setCtorString","Set","weakMapCtorString","WeakMap","getTag","ArrayBuffer","resolve","ctorString","_getTag","arrayTag","objectTag","_baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","_baseIsEqual","baseIsEqual","baseIsEqualDeep","_baseIsMatch","source","matchData","noCustomizer","srcValue","_isStrictComparable","_getMatchData","isStrictComparable","_matchesStrictComparable","_baseMatches","getMatchData","matchesStrictComparable","baseIsMatch","isSymbol_1","reIsDeepProp","reIsPlainProp","_isKey","isSymbol","FUNC_ERROR_TEXT","memoize","resolver","TypeError","memoized","args","Cache","memoize_1","MAX_MEMOIZE_SIZE","rePropName","reEscapeChar","_stringToPath","memoizeCapped","charCodeAt","match","number","quote","subString","_arrayMap","INFINITY","symbolToString","_baseToString","baseToString","arrayMap","toString_1","_castPath","isKey","stringToPath","_toKey","_baseGet","path","castPath","toKey","get_1","defaultValue","baseGet","_baseHasIn","_hasPath","hasFunc","hasIn_1","hasPath","baseHasIn","_baseMatchesProperty","hasIn","identity_1","_baseProperty","_basePropertyDeep","property_1","baseProperty","basePropertyDeep","_baseIteratee","identity","baseMatchesProperty","baseMatches","property","reWhitespace","_trimmedEndIndex","charAt","reTrimStart","_baseTrim","slice","trimmedEndIndex","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber_1","baseTrim","isBinary","MAX_INTEGER","toFinite_1","toNumber","toInteger_1","toFinite","remainder","nativeMax","Math","max","nativeMin","min","findLastIndex_1","toInteger","baseFindIndex","baseIteratee","computeOldLineNumber","computeNewLineNumber","getOldRangeFromHunk","oldStart","oldLines","createHunkFromChanges","reduce","isPlain","newLines","newStart","content","_objectSpread","concat","textLinesToHunk","lines","oldStartLineNumber","newStartLineNumber","line","sliceHunk","startOldLineNumber","endOldLineNumber","startIndex","nearestHeadingNocmalChangeIndex","_findLastIndex","slicedChanges","endIndex","mergeHunk","_getOldRangeFromHunk2","previousStart","previousEnd","_getOldRangeFromHunk4","nextStart","nextEnd","head","tail","appendOrMergeHunk","mergedHunk","insertHunk","insertion","insertionOldLineNumber","insertPosition","_ref3","getCorrespondingNewLineNumber","isOldLineNumberInHunk","isOldLineNumberBetweenHunks","splitRangeToValidOnes","correspondingHunkIndex","findCorrespondingValidHunkIndex","correspondingHunk","headingChangesCount","validEnd","nearestNormalChangeIndex","findNearestNormalChangeIndex","validStartChange","validStart","adjacentChangesCount","expandFromRawCode","rawCodeOrLines","range","slicedLines","split","slicedHunk","expandCodeByValidRange","getCollapsedLinesCountBetween","expandCollapsedBlockBy","linesOfCode","initialExpandingBlocks","expandingBlocks","_ref4","_ref5","getChangeKey","findChangeByOldLineNumber","findChangeByNewLineNumber","getCorrespondingOldLineNumber","parser","parse","currentInfo","changeOldLine","changeNewLine","infos","stat","linesLen","indexOf","oldEndingNewLine","newEndingNewLine","simiLine","currentInfoType","simiLoop","spaceIndex","infoType","leftStr","similarity","segs","revs","oldRevision","newRevision","oldMode","newMode","infoStr","oldPath","newPath","typeChar","lastChange","mapHunk","options","nearbySequences","current","lastDeletionIndex","_changes$reduce","zipChanges","mapFile","file","normalizeDiffText","text","indexOfFirstLineBreak","indexOfSecondLineBreak","firstLine","secondLine","_defineProperty","_baseAssignValue","defineProperty","configurable","enumerable","writable","_createBaseFor","iterable","props","_baseFor","createBaseFor","_baseForOwn","baseFor","mapValues_1","baseForOwn","baseAssignValue","defaultRenderToken","markType","properties","className","children","renderWithClassName","React","createElement","legacyClassName","CodeCell","tokens","renderToken","attributes","_excluded","actualRenderToken","token","displayName","propTypes","PropTypes","oneOfType","element","isRequired","arrayOf","defaultProps","CodeCell$1","memo","renderDefaultBy","wrapInAnchorBy","gutterAnchor","anchorTarget","href","composeCallback","own","custom","useBoundCallbacks","callbacks","hoverOn","hoverOff","useMemo","output","_mapValues","fn","onMouseEnter","onMouseLeave","renderGutterCell","events","inHoverState","renderGutter","gutterOptions","renderDefault","wrapInAnchor","_extends","UnifiedChange","_useState2","setValue","selected","gutterClassName","codeClassName","gutterEvents","codeEvents","hideGutter","generateAnchorID","_useBoolean","useState","useCallback","_useBoolean2","hover","eventArg","boundGutterEvents","boundCodeEvents","anchorID","gutterClassNameValue","codeClassNameValue","id","bool","UnifiedChange$1","UnifiedWidget","colSpan","UnifiedWidget$1","UnifiedHunk","widgets","childrenProps","_excluded2","elements","widget","groupElements","selectedChanges","lineClassName","changeProps","tokensOfLine","renderRow","UnifiedHunk$1","useCallbackOnSide","setHover","customCallbacks","markHover","unmarkHover","renderCells","gutterAnchorTarget","sideName","gutterProps","SplitChange","oldChange","newChange","oldSelected","newSelected","oldTokens","newTokens","monotonous","oldGutterEvents","newGutterEvents","oldCodeEvents","newCodeEvents","oldAnchorID","newAnchorID","commons","oldArgs","newArgs","lineTypeClassName","SplitChange$1","SplitWidget","oldElement","newElement","SplitWidget$1","keyForPair","x","y","SplitHunk","findWidget","next","rowChanges","_rowChanges$slice$map2","oldWidget","newWidget","item","oldValue","newValue","old","SplitHunk$1","Hunk","_objectWithoutProperties","_useDiffSettings","gutterType","context","RenderingHunk","viewType","oneOf","shape","contentClassName","Hunk$1","noop","setUserSelectStyle","selectable","style","userSelect","Diff","useRef","enableColumnSelection","target","button","closestCell","document","classList","contains","parentNode","findClosest","getSelection","removeAllRanges","_toConsumableArray","_step","_iterator","_createForOfIteratorHelper","querySelectorAll","s","done","cells","err","f","diffType","optimizeSelection","remainings","onTableMouseDown","cols","ref","onMouseDown","objectOf","node","warning","env","NODE_ENV","printWarning","format","len","argIndex","console","error","condition","warning_1","SplitDecoration","computedClassName","computedGutterClassName","computedContentClassName","columnCount","headerContentColSpan","Children","count","_children","gutter","SplitDecoration$1","UnifiedDecoration","UnifiedDecoration$1","Decoration","childrenCount","RenderingDecoration","Decoration$1","objectCreate","create","_baseCreate","proto","_baseLodash","LodashWrapper","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","baseCreate","baseLodash","_LodashWrapper","spreadableSymbol","isConcatSpreadable","_isFlattenable","_baseFlatten","baseFlatten","depth","isStrict","isFlattenable","flatten_1","_apply","thisArg","_overRest","otherArgs","constant_1","_baseSetToString","constant","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","_setToString","lastCalled","stamp","remaining","shortOut","baseSetToString","_flatRest","setToString","overRest","flatten","_metaMap","_getData","metaMap","_realNames","_getFuncName","realNames","otherFunc","MAX_ARRAY_LENGTH","LazyWrapper","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","_LazyWrapper","_copyArray","_wrapperClone","wrapper","clone","copyArray","lodash","wrapperClone","wrapperLodash","_isLaziable","funcName","getFuncName","getData","WRAP_CURRY_FLAG","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","_createFlow","flatRest","funcs","prereq","thru","reverse","isLaziable","plant","flow_1","createFlow","_arrayAggregator","setter","accumulator","_createBaseEach","eachFunc","collection","_baseEach","createBaseEach","_baseAggregator","baseEach","_createAggregator","initializer","arrayAggregator","baseAggregator","keyBy_1","createAggregator","last_1","_baseMap","map_1","baseMap","applyHunk","cursor","mapChanges","toValue","changesByLineNumber","_keyBy","maxLineNumber","_last","from","toTextPair","groupChanges","_flatMap","_ref6","oldChanges","newChanges","_groupChanges2","_groupChanges","toText","createRoot","toTokenTrees","_ref7","highlight","refractor","oldSource","language","newSource","applyDiff","highlightText","toTree","_arrayEach","_assignValue","_copyObject","isNew","assignValue","_baseAssign","copyObject","_nativeKeysIn","_baseKeysIn","nativeKeysIn","isProto","keysIn_1","baseKeysIn","_baseAssignIn","keysIn","allocUnsafe","isDeep","copy","_copySymbols","_getPrototype","getPrototypeOf","_getSymbolsIn","getPrototype","_copySymbolsIn","getSymbolsIn","_getAllKeysIn","_initCloneArray","input","_cloneArrayBuffer","arrayBuffer","_cloneDataView","dataView","cloneArrayBuffer","reFlags","_cloneRegExp","regexp","lastIndex","_cloneSymbol","_cloneTypedArray","typedArray","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","_initCloneByTag","cloneDataView","cloneTypedArray","cloneRegExp","cloneSymbol","_initCloneObject","_baseIsMap","nodeIsMap","isMap","isMap_1","baseIsMap","_baseIsSet","nodeIsSet","isSet","isSet_1","baseIsSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","cloneableTags","_baseClone","baseClone","isFlat","isFull","initCloneArray","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","initCloneByTag","subValue","getAllKeysIn","arrayEach","_baseSlice","_parent","baseSlice","_baseUnset","parent","objectCtorString","isPlainObject_1","_customOmitClone","isPlainObject","omit_1","paths","customOmitClone","baseUnset","leaf","splitStart","splitEnd","wrapSplitNode","parents","body","wrap","treeToPathList","nodeToUse","_omit","splitByLineBreak","currentLine","splitPathToLines","_splitPathToLines2","_toArray","_splitPathToLines","currentRemaining","nextLines","normalizeToLines","tree","isEqual_1","attachNode","previousSibling","xBase","yBase","_isEqual","areNodesMeregable","backToTree","pathList","_loop","groupBy_1","isEmpty_1","splitPathToEncloseRange","rangeEnd","_paths$reduce","nodeStart","nodeEnd","wrapNode","segments","linesOfPaths","ranges","rangesByLine","_groupBy","_isEmpty","pickRangesFromPath","pickRanges","oldRanges","newRanges","oldLinesOfPaths","newLinesOfPaths","findIndex_1","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","op","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","getTime","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","unshift","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","diff_lineMode_","diff_bisect_","a","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","subDiff","j","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","fromCharCode","maxLines","pointermin","pointermax","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","equalities","equalitiesLength","lastEquality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","param","decodeURI","ex","isNaN","match_main","match_bitap_","match_alphabet_","match_bitapScore_","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","index2","index1","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","m","sign","DIFF_EQUAL","DiffMatchPatch","DIFF_DELETE","DIFF_INSERT","findChangeBlocks","_findIndex","splitDiffToLines","_currentLines$map2","currentLineRemaining","diffsToEdits","diff","_output","edits","_diff2","convertToLinesOfEdits","linesOfDiffs","startLineNumber","diffText","oldDiffs","newDiffs","groupDiffs","diffChangeBlock","_changes$reduce2","_diffText2","getLineNumber","diffByLine","_ref8","currentChange","_ref9","oldEdits","newEdits","previousChange","_diffText4","markInPaths","word","replacement","wrapDisplayName","BaseComponent","hocName","Component","useMinCollapsedLines","minLinesExclusive","updateCollection","filter","useCollection","_useReducer2","useReducer","dispatch","toggle","only","useCustomEqualIdentifier","equals","identifier","useChangeSelect","_ref$multiple","multiple","_useCollection","useEffect","changeKey","useSourceExpansion","expandedRanges","linesOfOldSource","shallowEqualObjects","objA","objB","aKeys","bKeys","findAbnormalChanges","defaultShouldTokenize","yHunks","currentHunks","currentPayload","prevHunks","prevPayload","arrA","arrB","shallowEqualArrays","useTokenizeWorker","worker","payload","shouldTokenize","_options$shouldTokeni","payloadIdentifier","previous","tokenizationFailReason","tokenizeResult","setTokenizeResult","job","receiveTokens","_ref3$data","success","reason","addEventListener","removeEventListener","postMessage","defaultMapPayload","_ref10$type","changeBlocks","findEdits","_ref11","_ref12","_ref13","_ref14","currentOld","currentNew","_changeBlocks$map$red2","_changeBlocks$map$red","_flatten","mark","ComponentIn","ComponentOut","renderingHunks","trim","_options$highlight","_options$enhancers","enhancers","linesOfPathsPair","_enhancedLinesOfPaths2","_flow","enhance","oldTrees","newTrees","new","_useChangeSelect2","toggleChangeSelection","onToggleChangeSelection","_useSourceExpansion2","expandRange","onExpandRange","mapPayload","_options$mapPayload","hookOptions","resolveMessagePayload","tokenizationResult"],"mappings":"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"}